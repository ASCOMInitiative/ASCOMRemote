openapi: 3.0.2
servers:
  - description: Within the "Try it out" URLs, the device URL root is the trailing slash in "/ASCOMInitiative/".
    url: https://virtserver.swaggerhub.com/ASCOMInitiative/api/v1

info:
  title: ASCOM Alpaca Device API
  version: v1
  description: >
    The Alpaca API uses RESTful techniques and TCP/IP to enable ASCOM applications and devices to communicate across modern network environments.


    ## Interface Behaviour

    The ASCOM Interface behavioural requirements for Alpaca drivers are the same as for COM based drivers and are documented in the
    <a href="https://ascom-standards.org/Help/Developer/html/N_ASCOM_DeviceInterface.htm">API Interface Definitions</a> e.g.
    the <a href="https://ascom-standards.org/Help/Developer/html/M_ASCOM_DeviceInterface_ITelescopeV3_SlewToCoordinates.htm">Telescope.SlewToCoordinates</a> method.      
    This document focuses on how to use the ASCOM Interface standards in their RESTful Alpaca form.
    
    ## Alpaca URLs, Case Sensitivity, Parameters and Returned values

    **Alpaca Device API URLs** are of the form **http(s)://host:port/path** where path comprises **"/api/v1/"** followed by one of the method names below.
    e.g. for an Alpaca interface running on port 7843 of a device with IP address 192.168.1.89:
    
    * A telescope "Interface Version" method URL would be **http://192.168.1.89:7843/api/v1/telescope/0/interfaceversion**
        
    * A first focuser "Position" method URL would be  **http://192.168.1.89:7843/api/v1/focuser/0/position**
        
    * A second focuser "StepSize" method URL would be  **http://192.168.1.89:7843/api/v1/focuser/1/stepsize**

    * A rotator "Halt" method URL would be  **http://192.168.1.89:7843/api/v1/rotator/0/halt**
    
    
    
    URLs are case sensitive and all elements must be in lower case. This means that both the device type and command name must always be in lower case. Parameter names are not case sensitive, so clients and drivers should be prepared for parameter names to be supplied and returned with any casing. Parameter values can be in mixed case as required.
    
    
    For GET operations, parameters should be placed in the URL query string and for PUT operations they should be placed in the body of the message.


    Responses, as described below, are returned in JSON format and always include a common set of values including the client's transaction number, 
    the server's transaction number together with any error message and error number.

    If the transaction completes successfully, the ErrorMessage field will be an empty string and the ErrorNumber field will be zero.


    ## HTTP Status Codes and ASCOM Error codes

    The returned HTTP status code gives a high level view of whether the device understood the request and whether it attempted to process it.
    
    
    Under most circumstances the returned status will be `200`, indicating that the request was correctly formatted and that it was passed to the device's handler to execute.
    A `200` status does not necessarily mean that the operation completed as expected, without error, and you must always check the ErrorMessage and ErrorNumber fields to confirm
    whether the returned result is valid. The `200` status simply means that the transaction was successfully managed by the device's transaction management layer.
    
    
    An HTTP status code of `400` indicates that the device could not interpret the request e.g. an invalid device number or misspelt device type was supplied. Check the body of the response for a text error message.


    An HTTP status code of `500` indicates an unexpected error within the device from which it could not recover. Check the body of the response for a text error message.

    ## SetupDialog and Alpaca Device Configuration

    The SetupDialog method has been omitted from the Alpaca Device API because it presents a user interface rather than returning data. Alpaca device configuration is covered in the "ASCOM Alpaca Management API" specification, which can be selected through the drop-down box at the head of this page.
    
    

paths:
  '/{device_type}/{device_number}/action':
    put:
      summary: Invokes the named device-specific action.
      description:  >-
        Actions and SupportedActions are a standardised means for drivers to extend functionality beyond the built-in capabilities of the ASCOM device interfaces.
        
        
        The key advantage of using Actions is that drivers can expose any device specific functionality required. The downside is that, in order to use these unique features, every application author would need to create bespoke code to present or exploit them.
        
        
        The Action parameter and return strings are deceptively simple, but can support transmission of arbitrarily complex data structures, for example through JSON encoding.
        
        
        This capability will be of primary value to
         * <span style="font-size:14px;">bespoke software and hardware configurations where a single entity controls both the consuming application software and the hardware / driver environment</span>
         * <span style="font-size:14px;">a group of application and device authors to quickly formulate and try out new interface capabilities without requiring an immediate change to the ASCOM device interface, which will take a lot longer than just agreeing a name, input parameters and a standard response for an Action command.</span>
        
        
        The list of Action commands supported by a driver can be discovered through the SupportedActions property.
        
        
        This method should return an error message and NotImplementedException error number (0x400) if the driver just implements the standard ASCOM device methods and has no bespoke, unique, functionality.
      parameters:
        - $ref: '#/components/parameters/device_type'
        - $ref: '#/components/parameters/device_number'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Action:
                  description: >-
                    A well known name that represents the action to be carried
                    out.
                  type: string
                Parameters:
                  description: >-
                    List of required parameters or an Empty String if none are
                    required
                  type: string
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Action
                - Parameters
  '/{device_type}/{device_number}/commandblind':
    put:
      summary: Transmits an arbitrary string to the device
      description: >-
        Transmits an arbitrary string to the device and does not wait for a
        response. Optionally, protocol framing characters may be added to the
        string before transmission.
      parameters:
        - $ref: '#/components/parameters/device_type'
        - $ref: '#/components/parameters/device_number'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/put_devicetype_Devicenumber_commandblind'
  '/{device_type}/{device_number}/commandbool':
    put:
      summary: >-
        Transmits an arbitrary string to the device and returns a boolean value
        from the device.
      description: >-
        Transmits an arbitrary string to the device and waits for a boolean
        response. Optionally, protocol framing characters may be added to the
        string before transmission.
      parameters:
        - $ref: '#/components/parameters/device_type'
        - $ref: '#/components/parameters/device_number'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/put_devicetype_Devicenumber_commandblind'
  '/{device_type}/{device_number}/commandstring':
    put:
      summary: >-
        Transmits an arbitrary string to the device and returns a string value
        from the device.
      description: >-
        Transmits an arbitrary string to the device and waits for a string
        response. Optionally, protocol framing characters may be added to the
        string before transmission.
      parameters:
        - $ref: '#/components/parameters/device_type'
        - $ref: '#/components/parameters/device_number'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/put_devicetype_Devicenumber_commandblind'
  '/{device_type}/{device_number}/connected':
    get:
      summary: Retrieves the connected state of the device
      description: Retrieves the connected state of the device
      parameters:
        - $ref: '#/components/parameters/device_type'
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the connected state of the device
      description: Sets the connected state of the device
      tags:
        - ASCOM Methods Common To All Devices
      parameters:
        - $ref: '#/components/parameters/device_type'
        - $ref: '#/components/parameters/device_number'
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Connected:
                  description: >-
                    Set True to connect to the device hardware, set False to
                    disconnect from the device hardware
                  type: boolean
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Connected
  '/{device_type}/{device_number}/description':
    get:
      summary: Device description
      description: The description of the device
      parameters:
        - $ref: '#/components/parameters/device_type'
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/{device_type}/{device_number}/driverinfo':
    get:
      summary: Device driver description
      description: The description of the driver
      parameters:
        - $ref: '#/components/parameters/device_type'
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/{device_type}/{device_number}/driverversion':
    get:
      summary: Driver Version
      description: A string containing only the major and minor version of the driver.
      parameters:
        - $ref: '#/components/parameters/device_type'
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/{device_type}/{device_number}/interfaceversion':
    get:
      summary: The ASCOM Device interface version number that this device supports.
      description: >-
        This method returns the version of the ASCOM device interface contract to which this device complies. Only one interface version is current at a moment in time and all
        new devices should be built to the latest interface version. Applications can choose which device interface versions they support and it is in their interest to support 
        previous versions as well as the current version to ensure thay can use the largest number of devices.
      parameters:
        - $ref: '#/components/parameters/device_type'
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/{device_type}/{device_number}/name':
    get:
      summary: Device name
      description: The name of the device
      parameters:
        - $ref: '#/components/parameters/device_type'
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/{device_type}/{device_number}/supportedactions':
    get:
      summary: Returns the list of action names supported by this driver.
      description: Returns the list of action names supported by this driver.
      parameters:
        - $ref: '#/components/parameters/device_type'
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringArrayResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/bayeroffsetx':
    get:
      summary: Returns the X offset of the Bayer matrix.
      description: 'Returns the X offset of the Bayer matrix, as defined in SensorType.'
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/bayeroffsety':
    get:
      summary: Returns the Y offset of the Bayer matrix.
      description: 'Returns the Y offset of the Bayer matrix, as defined in SensorType.'
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/binx':
    get:
      summary: Returns the binning factor for the X axis.
      description: Returns the binning factor for the X axis.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the binning factor for the X axis.
      description: Sets the binning factor for the X axis.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/components/parameters/device_number'
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                BinX:
                  description: The X binning value
                  type: integer
                  format: int32
                  default: 1
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - BinX
  '/camera/{device_number}/biny':
    get:
      summary: Returns the binning factor for the Y axis.
      description: Returns the binning factor for the Y axis.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the binning factor for the Y axis.
      description: Sets the binning factor for the Y axis.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/components/parameters/device_number'
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                BinY:
                  description: The Y binning value
                  type: integer
                  format: int32
                  default: 1
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - BinY
  '/camera/{device_number}/camerastate':
    get:
      summary: Returns the camera operational state.
      description: >-
        Returns the current camera operational state as an integer. 0 =
        CameraIdle , 1 = CameraWaiting , 2 = CameraExposing , 3 = CameraReading
        , 4 = CameraDownload , 5 = CameraError
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/cameraxsize':
    get:
      summary: Returns the width of the CCD camera chip.
      description: Returns the width of the CCD camera chip in unbinned pixels.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/cameraysize':
    get:
      summary: Returns the height of the CCD camera chip.
      description: Returns the height of the CCD camera chip in unbinned pixels.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/canabortexposure':
    get:
      summary: Indicates whether the camera can abort exposures.
      description: Returns true if the camera can abort exposures; false if not.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/canasymmetricbin':
    get:
      summary: Indicates whether the camera supports asymmetric binning
      description: Returns a flag showing whether this camera supports asymmetric binning
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/canfastreadout':
    get:
      summary: Indicates whether the camera has a fast readout mode.
      description: Indicates whether the camera has a fast readout mode.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/cangetcoolerpower':
    get:
      summary: Indicates whether the camera's cooler power setting can be read.
      description: 'If true, the camera''s cooler power setting can be read.'
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/canpulseguide':
    get:
      summary: Returns a flag indicating whether this camera supports pulse guiding
      description: Returns a flag indicating whether this camera supports pulse guiding.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/cansetccdtemperature':
    get:
      summary: >-
        Returns a flag indicating whether this camera supports setting the CCD
        temperature
      description: >-
        Returns a flag indicatig whether this camera supports setting the CCD
        temperature
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/canstopexposure':
    get:
      summary: >-
        Returns a flag indicating whether this camera can stop an exposure that
        is in progress
      description: >-
        Returns a flag indicating whether this camera can stop an exposure that
        is in progress
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/ccdtemperature':
    get:
      summary: Returns the current CCD temperature
      description: Returns the current CCD temperature in degrees Celsius.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/cooleron':
    get:
      summary: Returns the current cooler on/off state.
      description: Returns the current cooler on/off state.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Turns the camera cooler on and off
      description: 'Turns on and off the camera cooler. True = cooler on, False = cooler off'
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/components/parameters/device_number'
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CoolerOn:
                  description: Cooler state
                  type: boolean
                  default: true
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - CoolerOn
  '/camera/{device_number}/coolerpower':
    get:
      summary: Returns the present cooler power level
      description: 'Returns the present cooler power level, in percent.'
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/electronsperadu':
    get:
      summary: Returns the gain of the camera
      description: Returns the gain of the camera in photoelectrons per A/D unit.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/exposuremax':
    get:
      summary: Returns the maximum exposure time supported by StartExposure.
      description: Returns the maximum exposure time supported by StartExposure.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/exposuremin':
    get:
      summary: Returns the Minimium exposure time
      description: >-
        Returns the Minimium exposure time in seconds that the camera supports
        through StartExposure.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/exposureresolution':
    get:
      summary: >-
        Returns the smallest increment in exposure time supported by
        StartExposure.
      description: >-
        Returns the smallest increment in exposure time supported by
        StartExposure.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/fastreadout':
    get:
      summary: Returns whenther Fast Readout Mode is enabled.
      description: Returns whenther Fast Readout Mode is enabled.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets whether Fast Readout Mode is enabled.
      description: Sets whether Fast Readout Mode is enabled.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/components/parameters/device_number'
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                FastReadout:
                  description: True to enable fast readout mode
                  type: boolean
                  default: false
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - FastReadout
  '/camera/{device_number}/fullwellcapacity':
    get:
      summary: Reports the full well capacity of the camera
      description: >-
        Reports the full well capacity of the camera in electrons, at the
        current camera settings (binning, SetupDialog settings, etc.).
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/gain':
    get:
      summary: Returns the camera's gain
      description: The camera's gain (GAIN VALUE MODE) OR the index of the selected camera gain description in the Gains array (GAINS INDEX MODE).
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the camera's gain.
      description: The camera's gain (GAIN VALUE MODE) OR the index of the selected camera gain description in the Gains array (GAINS INDEX MODE).
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/components/parameters/device_number'
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Gain:
                  description: Index of the current camera gain in the Gains string array.
                  type: integer
                  format: int32
                  default: 0
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Gain
  '/camera/{device_number}/gainmax':
    get:
      summary: Maximum Gain value of that this camera supports
      description: Returns the maximum value of Gain.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/gainmin':
    get:
      summary: Minimum Gain value of that this camera supports 
      description: Returns the Minimum value of Gain.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/gains':
    get:
      summary: List of Gain names supported by the camera 
      description: Returns the Gains supported by the camera.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringArrayResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed

  '/camera/{device_number}/hasshutter':
    get:
      summary: Indicates whether the camera has a mechanical shutter
      description: Returns a flag indicating whether this camera has a mechanical shutter.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/heatsinktemperature':
    get:
      summary: Returns the current heat sink temperature.
      description: >-
        Returns the current heat sink temperature (called "ambient temperature"
        by some manufacturers) in degrees Celsius.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/imagearray':
    get:
      summary: Returns an array of integers containing the exposure pixel values
      description: >
        Returns an array of 32bit integers containing the pixel values from the last exposure. This call can return either a 2 dimension (monochrome images) or 3 dimension (colour or multi-plane images) array of size NumX \* NumY or NumX \* NumY \* NumPlanes. Where applicable, the size of NumPlanes has to be determined by inspection of the returned Array.
        
        
        Since 32bit integers are always returned by this call, the returned JSON Type value (0 = Unknown, 1 = short(16bit), 2 = int(32bit), 3 = Double) is always 2. The number of planes is given in the returned Rank value.
        
        
        When de-serialising to an object it is essential to know the array Rank beforehand so that the correct data class can be used. This can be achieved through a regular expression or by direct parsing of the returned JSON string to extract the Type and Rank values before de-serialising.
        
        
        This regular expression accomplishes the extraction into two named groups Type and Rank, which can then be used to select the correct de-serialisation data class:
        
        
        __`^*"Type":(?<Type>\d*),"Rank":(?<Rank>\d*)`__
        
        
        When the SensorType is Monochrome, RGGB, CMYG, CMYG2 or LRGB, the serialised JSON array should have 2 dimensions. For example, the returned array should appear as below if NumX = 7, NumY = 5 
        and Pxy represents the pixel value at the zero based position x across and y down the image with the origin in the top left corner of the image.  
        
        
        Please note that this is "column-major" order (column changes most rapidly)
        from the image's row and column perspective, while, from the array's perspective, serialisation is actually effected in "row-major" order (rightmost index changes most rapidly). 
        This unintuitive outcome arises because the ASCOM Camera Interface specification defines the image column dimension as the rightmost array dimension.
        
        
        [
        
        
        [P00,P01,P02,P03,P04],
        
        
        [P10,P11,P12,P13,P14],
        
        
        [P20,P21,P22,P23,P24],
        
        
        [P30,P31,P32,P33,P34],
        
        
        [P40,P41,P42,P43,P44],
        
        
        [P50,P51,P52,P53,P54],
        
        
        [P60,P61,P62,P63,P64]
        
        
        ]
        
        
        When the SensorType is Color, the serialised JSON array will have 3 dimensions. For example, the returned array should appear as below if NumX = 7, NumY = 5 
        and Rxy, Gxy and Bxy represent the red, green and blue pixel values at the zero based position x across and y down the image with the origin in the top left corner of the image.  Please see note above regarding element ordering.
        
        
        [
        

        [[R00,G00,B00],[R01,G01,B01],[R02,G02,B02],[R03,G03,B03],[R04,G04,B04]],


        [[R10,G10,B10],[R11,G11,B11],[R12,G12,B12],[R13,G13,B13],[R14,G14,B14]],


        [[R20,G20,B20],[R21,G21,B21],[R22,G22,B22],[R23,G23,B23],[R24,G24,B24]],


        [[R30,G30,B30],[R31,G31,B31],[R32,G32,B32],[R33,G33,B33],[R34,G34,B34]],


        [[R40,G40,B40],[R41,G41,B41],[R42,G42,B42],[R43,G43,B43],[R44,G44,B44]],


        [[R50,G50,B50],[R51,G51,B51],[R52,G52,B52],[R53,G53,B53],[R54,G54,B54]],


        [[R60,G60,B60],[R61,G61,B61],[R62,G62,B62],[R63,G63,B63],[R64,G64,B64]],


        ]
        
        
        __`Performance`__

        
        Returning an image from an Alpaca device as a JSON array is very inefficient and can result in delays of 30 or more seconds while client and device process and send the huge JSON string over the network. 
        A new, much faster mechanic called ImageBytes - [Alpaca ImageBytes Concepts and Implementation](https://www.ascom-standards.org/Developer/AlpacaImageBytes.pdf) has been developed that sends data as a binary byte stream and can offer a 10 to 20 fold reduction in transfer time. 
        It is strongly recommended that Alpaca Cameras implement the ImageBytes mechanic as well as the JSON mechanic.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageArrayResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/imagearrayvariant':
    get:
      summary: Returns an array of int containing the exposure pixel values
      description: >
        Returns an array containing the pixel values from the last exposure.
        This call can return either a 2 dimension (monochrome images) or 3
        dimension (colour or multi-plane images) array of size NumX \* NumY  or
        NumX \* NumY \* NumPlanes. Where applicable, the size of NumPlanes has
        to be determined by inspection of the returned Array.
        
        
        This call can return values as short(16bit) integers, int(32bit)
        integers or double floating point values. The nature of the returned
        values is given in the Type parameter: 0 = Unknown, 1 = short(16bit), 2
        = int(32bit), 3 = Double. The number of planes is given in the returned
        Rank value.
        
        
        When deserialising to an object it helps enormously to know the Type and
        Rank beforehand so that the correct data class can be used. This can be
        achieved through a regular expression or by direct parsing of the
        returned JSON string to extract the Type and Rank values before
        deserialising.
        
        
        This regular expression accomplishes the extraction into two named groups Type and Rank, which can then be used to select the correct de-serialisation data class:
        
        
        __`^*"Type":(?<Type>\d*),"Rank":(?<Rank>\d*)`__
        
        
        When the SensorType is Monochrome, RGGB, CMYG, CMYG2 or LRGB, the serialised JSON array should have 2 dimensions. For example, the returned array should appear as below if NumX = 7, NumY = 5 
        and Pxy represents the pixel value at the zero based position x across and y down the image with the origin in the top left corner of the image.  
        
        
        Please note that this is "column-major" order (column changes most rapidly)
        from the image's row and column perspective, while, from the array's perspective, serialisation is actually effected in "row-major" order (rightmost index changes most rapidly). 
        This unintuitive outcome arises because the ASCOM Camera Interface specification defines the image column dimension as the rightmost array dimension.
        
        
        [
        
        
        [P00,P01,P02,P03,P04],
        
        
        [P10,P11,P12,P13,P14],
        
        
        [P20,P21,P22,P23,P24],
        
        
        [P30,P31,P32,P33,P34],
        
        
        [P40,P41,P42,P43,P44],
        
        
        [P50,P51,P52,P53,P54],
        
        
        [P60,P61,P62,P63,P64]
        
        
        ]
        
        
        When the SensorType is Color, the serialised JSON array should have 3 dimensions. For example, the returned array should appear as below if NumX = 7, NumY = 5 
        and Rxy, Gxy and Bxy represent the red, green and blue pixel values at the zero based position x across and y down the image with the origin in the top left corner of the image.  Please see note above regarding element ordering.
        
        
        [
        

        [[R00,G00,B00],[R01,G01,B01],[R02,G02,B02],[R03,G03,B03],[R04,G04,B04]],


        [[R10,G10,B10],[R11,G11,B11],[R12,G12,B12],[R13,G13,B13],[R14,G14,B14]],


        [[R20,G20,B20],[R21,G21,B21],[R22,G22,B22],[R23,G23,B23],[R24,G24,B24]],


        [[R30,G30,B30],[R31,G31,B31],[R32,G32,B32],[R33,G33,B33],[R34,G34,B34]],


        [[R40,G40,B40],[R41,G41,B41],[R42,G42,B42],[R43,G43,B43],[R44,G44,B44]],


        [[R50,G50,B50],[R51,G51,B51],[R52,G52,B52],[R53,G53,B53],[R54,G54,B54]],


        [[R60,G60,B60],[R61,G61,B61],[R62,G62,B62],[R63,G63,B63],[R64,G64,B64]],


        ]
        
        
        __`Performance`__

        
        Returning an image from an Alpaca device as a JSON array is very inefficient and can result in delays of 30 or more seconds while client and device process and send the huge JSON string over the network. 
        A new, much faster mechanic called ImageBytes - [Alpaca ImageBytes Concepts and Implementation](https://www.ascom-standards.org/Developer/AlpacaImageBytes.pdf) has been developed that sends data as a binary byte stream and can offer a 10 to 20 fold reduction in transfer time. 
        It is strongly recommended that Alpaca Cameras implement the ImageBytes mechanic as well as the JSON mechanic.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageArrayResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/imageready':
    get:
      summary: Indicates that an image is ready to be downloaded
      description: >-
        Returns a flag indicating whether the image is ready to be downloaded
        from the camera.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/ispulseguiding':
    get:
      summary: Indicates that the camera is pulse guideing.
      description: >-
        Returns a flag indicating whether the camera is currrently in a
        PulseGuide operation.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/lastexposureduration':
    get:
      summary: Duration of the last exposure
      description: >-
        Reports the actual exposure duration in seconds (i.e. shutter open
        time).
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/lastexposurestarttime':
    get:
      summary: Start time of the last exposure in FITS standard format.
      description: >-
        Reports the actual exposure start in the FITS-standard
        CCYY-MM-DDThh:mm:ss[.sss...] format.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/maxadu':
    get:
      summary: Camera's maximum ADU value
      description: Reports the maximum ADU value the camera can produce.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/maxbinx':
    get:
      summary: Maximum  binning for the camera X axis
      description: Returns the maximum allowed binning for the X camera axis
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/maxbiny':
    get:
      summary: Maximum  binning for the camera Y axis
      description: Returns the maximum allowed binning for the Y camera axis
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/numx':
    get:
      summary: Returns the current subframe width
      description: >-
        Returns the current subframe width, if binning is active, value is in
        binned pixels.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the current subframe width
      description: Sets the current subframe width.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/components/parameters/device_number'
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                NumX:
                  description: >-
                    Sets the subframe width, if binning is active, value is in
                    binned pixels.
                  type: integer
                  format: int32
                  default: 0
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - NumX
  '/camera/{device_number}/numy':
    get:
      summary: Returns the current subframe height
      description: >-
        Returns the current subframe height, if binning is active, value is in
        binned pixels.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the current subframe height
      description: Sets the current subframe height.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/components/parameters/device_number'
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                NumY:
                  description: >-
                    Sets the subframe height, if binning is active, value is in
                    binned pixels.
                  type: integer
                  format: int32
                  default: 0
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - NumY
  '/camera/{device_number}/offset':
    get:
      summary: Returns the camera's offset
      description: Returns the camera's offset (OFFSET VALUE MODE) OR the index of the selected camera offset description in the offsets array (OFFSETS INDEX MODE).
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the camera's offset.
      description: Sets the camera's offset (OFFSET VALUE MODE) OR the index of the selected camera offset description in the offsets array (OFFSETS INDEX MODE).
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/components/parameters/device_number'
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                offset:
                  description: Index of the current camera offset in the offsets string array.
                  type: integer
                  format: int32
                  default: 0
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - offset
  '/camera/{device_number}/offsetmax':
    get:
      summary: Maximum offset value of that this camera supports
      description: Returns the maximum value of offset.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/offsetmin':
    get:
      summary: Minimum offset value of that this camera supports 
      description: Returns the Minimum value of offset.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/offsets':
    get:
      summary: List of offset names supported by the camera 
      description: Returns the offsets supported by the camera.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringArrayResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/percentcompleted':
    get:
      summary: Indicates percentage completeness of the current operation
      description: >-
        Returns the percentage of the current operation that is complete. If
        valid, returns an integer between 0 and 100, where 0 indicates 0%
        progress (function just started) and 100 indicates 100% progress (i.e.
        completion).
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/pixelsizex':
    get:
      summary: Width of CCD chip pixels (microns)
      description: Returns the width of the CCD chip pixels in microns.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/pixelsizey':
    get:
      summary: Height of CCD chip pixels (microns)
      description: Returns the Height of the CCD chip pixels in microns.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/readoutmode':
    get:
      summary: >-
        Indicates the canera's readout mode as an index into the array
        ReadoutModes
      description: >-
        ReadoutMode is an index into the array ReadoutModes and returns the
        desired readout mode for the camera. Defaults to 0 if not set.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Set the camera's readout mode
      description: Sets the ReadoutMode as an index into the array ReadoutModes.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/components/parameters/device_number'
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReadoutMode:
                  description: >-
                    Index into the ReadoutModes array of string readout mode
                    names indicating the camera's current readout mode.
                  type: integer
                  format: int32
                  default: 0
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - ReadoutMode
  '/camera/{device_number}/readoutmodes':
    get:
      summary: List of available readout modes
      description: >-
        This property provides an array of strings, each of which describes an
        available readout mode of the camera. At least one string must be
        present in the list.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringArrayResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/sensorname':
    get:
      summary: Sensor name
      description: The name of the sensor used within the camera.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/sensortype':
    get:
      summary: >-
        Type of information returned by the the camera sensor (monochrome or
        colour)
      description: >
        Returns a value indicating whether the sensor is monochrome, or what
        Bayer matrix it encodes. Where: 

        - 0 = Monochrome,

        - 1 = Colour not requiring Bayer decoding

        - 2 = RGGB Bayer encoding

        - 3 = CMYG Bayer encoding

        - 4 = CMYG2 Bayer encoding

        - 5 = LRGB TRUESENSE Bayer encoding.


        Please see the ASCOM Help fie for more informaiton on the SensorType.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/camera/{device_number}/setccdtemperature':
    get:
      summary: Returns the current camera cooler setpoint in degrees Celsius.
      description: Returns the current camera cooler setpoint in degrees Celsius.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Set the camera's cooler setpoint (degrees Celsius).
      description: Set's the camera's cooler setpoint in degrees Celsius.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/components/parameters/device_number'
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SetCCDTemperature:
                  description: Temperature set point (degrees Celsius).
                  type: number
                  default: -10
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - SetCCDTemperature
  '/camera/{device_number}/startx':
    get:
      summary: Return the current subframe X axis start position
      description: >-
        Sets the subframe start position for the X axis (0 based) and returns
        the current value. If binning is active, value is in binned pixels.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the current subframe X axis start position
      description: Sets the current subframe X axis start position in binned pixels.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/components/parameters/device_number'
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                StartX:
                  description: The subframe X axis start position in binned pixels.
                  type: integer
                  format: int32
                  default: 0
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - StartX
  '/camera/{device_number}/starty':
    get:
      summary: Return the current subframe Y axis start position
      description: >-
        Sets the subframe start position for the Y axis (0 based) and returns
        the current value. If binning is active, value is in binned pixels.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the current subframe Y axis start position
      description: Sets the current subframe Y axis start position in binned pixels.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/components/parameters/device_number'
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                StartY:
                  description: The subframe Y axis start position in binned pixels.
                  type: integer
                  format: int32
                  default: 0
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - StartY
  '/camera/{device_number}/subexposureduration':
    get:
      summary: Camera's sub-exposure interval
      description: >-
        The Camera's sub exposure duration in seconds. Only available in Camera Interface Version 3 and later.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the current Sub Exposure Duration
      description: Sets image sub exposure duration in seconds. Only available in Camera Interface Version 3 and later.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/components/parameters/device_number'
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SubExposureDuration:
                  description: The request sub exposure duration in seconds
                  type: number
                  default: 0
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - SubExposureDuration          
  '/camera/{device_number}/abortexposure':
    put:
      summary: Aborts the current exposure
      description: >-
        Aborts the current exposure, if any, and returns the camera to Idle
        state.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/camera/{device_number}/pulseguide':
    put:
      summary: Pulse guide in the specified direction for the specified time.
      description: >-
        Activates the Camera's mount control sytem to instruct the mount to move
        in a particular direction for a given period of time
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Direction:
                  description: >-
                    Direction of movement (0 = North, 1 = South, 2 = East, 3 =
                    West)
                  type: integer
                  format: int32
                Duration:
                  description: Duration of movement in milli-seconds
                  type: integer
                  format: int32
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Direction
                - Duration
  '/camera/{device_number}/startexposure':
    put:
      summary: Starts an exposure
      description: >-
        Starts an exposure. Use ImageReady to check when the exposure is
        complete.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Duration:
                  description: Duration of exposure in seconds
                  type: number
                Light:
                  description: 'True if light frame, false if dark frame.'
                  type: boolean
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Duration
                - Light
  '/camera/{device_number}/stopexposure':
    put:
      summary: Stops the current exposure
      description: >-
        Stops the current exposure, if any. If an exposure is in progress, the
        readout process is initiated. Ignored if readout is already in process.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Camera Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'


  '/covercalibrator/{device_number}/brightness':
    get:
      summary: Returns the current calibrator brightness
      description: Returns the current calibrator brightness in the range 0 (completely off) to MaxBrightness (fully on) 
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - CoverCalibrator Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/covercalibrator/{device_number}/calibratorstate':
    get:
      summary: Returns the state of the calibration device
      description: >-
        Returns the state of the calibration device, if present, otherwise returns "NotPresent". 
        The calibrator state mode is specified as an integer value from the
        CalibratorStatus Enum.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - CoverCalibrator Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/covercalibrator/{device_number}/coverstate':
    get:
      summary: Returns the state of the device cover" 
      description: >-
        Returns the state of the device cover, if present, otherwise returns "NotPresent". 
        The cover state mode is specified as an integer value from the
        CoverStatus Enum.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - CoverCalibrator Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/covercalibrator/{device_number}/maxbrightness':
    get:
      summary: Returns the calibrator's maximum Brightness value.
      description: The Brightness value that makes the calibrator deliver its maximum illumination. 
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - CoverCalibrator Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/covercalibrator/{device_number}/calibratoroff':
    put:
      summary: Turns the calibrator off
      description: 'Turns the calibrator off if the device has calibration capability.'
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - CoverCalibrator Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/covercalibrator/{device_number}/calibratoron':
    put:
      summary: Turns the calibrator on at the specified brightness
      description: >-
        Turns the calibrator on at the specified brightness if the device has calibration capability.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - CoverCalibrator Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Brightness:
                  description: >-
                    The required brightness in the range 0 to MaxBrightness
                  type: integer
                  format: int32
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Brightness
  '/covercalibrator/{device_number}/closecover':
    put:
      summary: Initiates cover closing 
      description: 'Initiates cover closing if a cover is present.'
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - CoverCalibrator Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/covercalibrator/{device_number}/haltcover':
    put:
      summary: Stops any cover movement that may be in progress
      description: 'Stops any cover movement that may be in progress if a cover is present and cover movement can be interrupted.'
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - CoverCalibrator Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/covercalibrator/{device_number}/opencover':
    put:
      summary: Initiates cover opening
      description: 'Initiates cover opening if a cover is present.'
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - CoverCalibrator Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/dome/{device_number}/altitude':
    get:
      summary: The dome altitude
      description: >-
        The dome altitude (degrees, horizon zero and increasing positive to 90
        zenith).
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/dome/{device_number}/athome':
    get:
      summary: Indicates whether the dome is in the home position.
      description: >-
        Indicates whether the dome is in the home position. This is normally
        used following a FindHome()  operation. The value is reset with any
        azimuth slew operation that moves the dome away from the home position.
        AtHome may also become true durng normal slew operations, if the dome
        passes through the home position and the dome controller hardware is
        capable of detecting that; or at the end of a slew operation if the dome
        comes to rest at the home position.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/dome/{device_number}/atpark':
    get:
      summary: Indicates whether the dome is at the park position
      description: >-
        True if the dome is in the programmed park position. Set only following
        a Park() operation and reset with any slew operation.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/dome/{device_number}/azimuth':
    get:
      summary: The dome azimuth
      description: >-
        Returns the dome azimuth (degrees, North zero and increasing clockwise,
        i.e., 90 East, 180 South, 270 West)
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/dome/{device_number}/canfindhome':
    get:
      summary: Indicates whether the dome can find the home position.
      description: True if the dome can move to the home position.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/dome/{device_number}/canpark':
    get:
      summary: Indicates whether the dome can be parked.
      description: True if the dome is capable of programmed parking (Park() method)
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/dome/{device_number}/cansetaltitude':
    get:
      summary: Indicates whether the dome altitude can be set
      description: True if driver is capable of setting the dome altitude.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/dome/{device_number}/cansetazimuth':
    get:
      summary: Indicates whether the dome azimuth can be set
      description: True if driver is capable of setting the dome azimuth.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/dome/{device_number}/cansetpark':
    get:
      summary: Indicates whether the dome park position can be set
      description: True if driver is capable of setting the dome park position.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/dome/{device_number}/cansetshutter':
    get:
      summary: Indicates whether the dome shutter can be opened
      description: True if driver is capable of automatically operating shutter
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/dome/{device_number}/canslave':
    get:
      summary: Indicates whether the dome supports slaving to a telescope
      description: True if driver is capable of slaving to a telescope.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/dome/{device_number}/cansyncazimuth':
    get:
      summary: Indicates whether the dome azimuth position can be synched
      description: >-
        True if driver is capable of synchronizing the dome azimuth position
        using the SyncToAzimuth(Double) method.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/dome/{device_number}/shutterstatus':
    get:
      summary: Status of the dome shutter or roll-off roof
      description: >-
        Returns the status of the dome shutter or roll-off roof. 0 = Open, 1 =
        Closed, 2 = Opening, 3 = Closing, 4 = Shutter status error
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/dome/{device_number}/slaved':
    get:
      summary: Indicates whether the dome is slaved to the telescope
      description: 'True if the dome is slaved to the telescope in its hardware, else False.'
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets whether the dome is slaved to the telescope
      description: Sets the current subframe height.
      tags:
        - Dome Specific Methods
      parameters:
        - $ref: '#/components/parameters/device_number'
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Slaved:
                  description: 'True if telescope is slaved to dome, otherwise false'
                  type: boolean
                  default: false
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Slaved
  '/dome/{device_number}/slewing':
    get:
      summary: Indicates whether the any part of the dome is moving
      description: >-
        True if any part of the dome is currently moving, False if all dome
        components are steady.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/dome/{device_number}/abortslew':
    put:
      summary: Immediately cancel current dome operation.
      description: >-
        Calling this method will immediately disable hardware slewing (Slaved
        will become False).
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/dome/{device_number}/closeshutter':
    put:
      summary: Close the shutter or otherwise shield telescope from the sky.
      description: Close the shutter or otherwise shield telescope from the sky.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/dome/{device_number}/findhome':
    put:
      summary: Start operation to search for the dome home position.
      description: >-
        After Home position is established initializes Azimuth to the default
        value and sets the AtHome flag.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/dome/{device_number}/openshutter':
    put:
      summary: Open shutter or otherwise expose telescope to the sky.
      description: Open shutter or otherwise expose telescope to the sky.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/dome/{device_number}/park':
    put:
      summary: Rotate dome in azimuth to park position.
      description: 'After assuming programmed park position, sets AtPark flag.'
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/dome/{device_number}/setpark':
    put:
      summary: >-
        Set the current azimuth, altitude position of dome to be the park
        position
      description: >-
        Set the current azimuth, altitude position of dome to be the park
        position.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/dome/{device_number}/slewtoaltitude':
    put:
      summary: Slew the dome to the given altitude position.
      description: Slew the dome to the given altitude position.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Altitude:
                  description: >-
                    Target dome altitude (degrees, horizon zero and increasing
                    positive to 90 zenith)
                  type: number
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Altitude
  '/dome/{device_number}/slewtoazimuth':
    put:
      summary: Slew the dome to the given azimuth position.
      description: Slew the dome to the given azimuth position.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putDome_devicenumber_slewtoazimuth'
  '/dome/{device_number}/synctoazimuth':
    put:
      summary: Synchronize the current position of the dome to the given azimuth.
      description: Synchronize the current position of the dome to the given azimuth.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Dome Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putDome_devicenumber_slewtoazimuth'
  '/filterwheel/{device_number}/focusoffsets':
    get:
      summary: Filter focus offsets
      description: An integer array of filter focus offsets.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - FilterWheel Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntArrayResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/filterwheel/{device_number}/names':
    get:
      summary: Filter wheel filter names
      description: The names of the filters
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - FilterWheel Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringArrayResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/filterwheel/{device_number}/position':
    get:
      summary: Returns the current filter wheel position
      description: Returns the current filter wheel position
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - FilterWheel Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the filter wheel position
      description: Sets the filter wheel position
      tags:
        - FilterWheel Specific Methods
      parameters:
        - $ref: '#/components/parameters/device_number'
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Position:
                  description: The number of the filter wheel position to select
                  type: integer
                  format: int32
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Position
  '/focuser/{device_number}/absolute':
    get:
      summary: Indicates whether the focuser is capable of absolute position.
      description: >-
        True if the focuser is capable of absolute position; that is, being
        commanded to a specific step location.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/focuser/{device_number}/ismoving':
    get:
      summary: Indicates whether the focuser is currently moving.
      description: >-
        True if the focuser is currently moving to a new position. False if the
        focuser is stationary.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/focuser/{device_number}/maxincrement':
    get:
      summary: Returns the focuser's maximum increment size.
      description: >-
        Maximum increment size allowed by the focuser; i.e. the maximum number
        of steps allowed in one move operation.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/focuser/{device_number}/maxstep':
    get:
      summary: Returns the focuser's maximum step size.
      description: Maximum step position permitted.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/focuser/{device_number}/position':
    get:
      summary: Returns the focuser's current position.
      description: 'Current focuser position, in steps.'
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/focuser/{device_number}/stepsize':
    get:
      summary: Returns the focuser's step size.
      description: Step size (microns) for the focuser.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/focuser/{device_number}/tempcomp':
    get:
      summary: Retrieves the state of temperature compensation mode
      description: >-
        Gets the state of temperature compensation mode (if available), else
        always False.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the device's temperature compensation mode.
      description: Sets the state of temperature compensation mode.
      tags:
        - Focuser Specific Methods
      parameters:
        - name: device_number
          description: Zero based device number as set on the server
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TempComp:
                  description: >-
                    Set true to enable the focuser's temperature compensation
                    mode, otherwise false for normal operation.
                  type: boolean
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - TempComp
  '/focuser/{device_number}/tempcompavailable':
    get:
      summary: Indicates whether the focuser has temperature compensation.
      description: True if focuser has temperature compensation available.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/focuser/{device_number}/temperature':
    get:
      summary: Returns the focuser's current temperature.
      description: Current ambient temperature as measured by the focuser.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/focuser/{device_number}/halt':
    put:
      summary: Immediatley stops focuser motion.
      description: >-
        Immediately stop any focuser motion due to a previous Move(Int32) method
        call.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Focuser Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/focuser/{device_number}/move':
    put:
      summary: Moves the focuser to a new position.
      description: >-
        Moves the focuser by the specified amount or to the specified position
        depending on the value of the Absolute property.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Focuser Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Position:
                  description: >-
                    Step distance or absolute position, depending on the value
                    of the Absolute property
                  type: integer
                  format: int32
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Position
  '/observingconditions/{device_number}/averageperiod':
    get:
      summary: Returns the time period over which observations will be averaged
      description: Gets the time period over which observations will be averaged
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the time period over which observations will be averaged
      description: Sets the time period over which observations will be averaged
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                AveragePeriod:
                  description: Time period (hours) over which to average sensor readings
                  type: number
                  default: 0.15
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - AveragePeriod
  '/observingconditions/{device_number}/cloudcover':
    get:
      summary: Returns the amount of sky obscured by cloud
      description: Gets the percentage of the sky obscured by cloud
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/observingconditions/{device_number}/dewpoint':
    get:
      summary: Returns the atmospheric dew point at the observatory
      description: Gets the atmospheric dew point at the observatory reported in °C.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/observingconditions/{device_number}/humidity':
    get:
      summary: Returns the atmospheric humidity at the observatory
      description: Gets the atmospheric  humidity (%) at the observatory
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/observingconditions/{device_number}/pressure':
    get:
      summary: Returns the atmospheric pressure at the observatory.
      description: >-
        Gets the atmospheric pressure in hectoPascals at the observatory's
        altitude - NOT reduced to sea level.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/observingconditions/{device_number}/rainrate':
    get:
      summary: Returns the rain rate at the observatory.
      description: Gets the rain rate (mm/hour) at the observatory.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/observingconditions/{device_number}/skybrightness':
    get:
      summary: Returns the sky brightness at the observatory
      description: Gets the sky brightness at the observatory (Lux)
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/observingconditions/{device_number}/skyquality':
    get:
      summary: Returns the sky quality at the observatory
      description: >-
        Gets the sky quality at the observatory (magnitudes per square arc
        second)
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/observingconditions/{device_number}/skytemperature':
    get:
      summary: Returns the sky temperature at the observatory
      description: Gets the sky temperature(°C) at the observatory.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/observingconditions/{device_number}/starfwhm':
    get:
      summary: Returns the seeing at the observatory
      description: >-
        Gets the seeing at the observatory measured as star full width half
        maximum (FWHM) in arc secs.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/observingconditions/{device_number}/temperature':
    get:
      summary: Returns the temperature at the observatory
      description: Gets the temperature(°C) at the observatory.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/observingconditions/{device_number}/winddirection':
    get:
      summary: Returns the wind direction at the observatory
      description: >-
        Gets the wind direction. The returned value must be between 0.0 and
        360.0, interpreted according to the metereological standard, where a
        special value of 0.0 is returned when the wind speed is 0.0. Wind
        direction is measured clockwise from north, through east, where
        East=90.0, South=180.0, West=270.0 and North=360.0.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/observingconditions/{device_number}/windgust':
    get:
      summary: >-
        Returns the peak 3 second wind gust at the observatory over the last 2
        minutes
      description: >-
        Gets the peak 3 second wind gust(m/s) at the observatory over the last 2
        minutes.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/observingconditions/{device_number}/windspeed':
    get:
      summary: Returns the wind speed at the observatory.
      description: Gets the wind speed(m/s) at the observatory.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/observingconditions/{device_number}/refresh':
    put:
      summary: Refreshes sensor values from hardware.
      description: >-
        Forces the driver to immediately query its attached hardware to refresh
        sensor values.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/observingconditions/{device_number}/sensordescription':
    get:
      summary: Return a sensor description
      description: >-
        Gets a description of the sensor with the name specified in the
        SensorName parameter
      parameters:
        - $ref: '#/components/parameters/device_number'
        - name: SensorName
          description: Name of the sensor whose description is required
          in: query
          required: true
          schema:
            type: string
            default: Pressure
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/observingconditions/{device_number}/timesincelastupdate':
    get:
      summary: Return the time since the sensor value was last updated
      description: >-
        Gets the time since the sensor specified in the SensorName
        parameter was last updated
      parameters:
        - $ref: '#/components/parameters/device_number'
        - name: SensorName
          description: Name of the sensor whose last update time is required
          in: query
          required: true
          schema:
            type: string
            default: Pressure
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/rotator/{device_number}/canreverse':
    get:
      summary: IIndicates whether the Rotator supports the Reverse method.
      description: True if the Rotator supports the Reverse method.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Rotator Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/rotator/{device_number}/ismoving':
    get:
      summary: Indicates whether the rotator is currently moving.
      description: >-
        True if the rotator is currently moving to a new position. False if the
        focuser is stationary.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Rotator Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/rotator/{device_number}/mechanicalposition':
    get:
      summary: Returns the rotator's mechanical current position.
      description: 'Returns the raw mechanical position of the rotator in degrees.'
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Rotator Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/rotator/{device_number}/position':
    get:
      summary: Returns the rotator's current position.
      description: 'Current instantaneous Rotator position, in degrees.'
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Rotator Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/rotator/{device_number}/reverse':
    get:
      summary: Returns the rotator’s Reverse state.
      description: Returns the rotator’s Reverse state.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Rotator Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the rotator’s Reverse state.
      description: Sets the rotator’s Reverse state.
      tags:
        - Rotator Specific Methods
      parameters:
        - $ref: '#/components/parameters/device_number'
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Reverse:
                  description: >-
                    True if the rotation and angular direction must be reversed
                    to match the optical characteristcs
                  type: boolean
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Reverse
  '/rotator/{device_number}/stepsize':
    get:
      summary: Returns the minimum StepSize
      description: 'The minimum StepSize, in degrees.'
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Rotator Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/rotator/{device_number}/targetposition':
    get:
      summary: Returns the destination position angle.
      description: The destination position angle for Move() and MoveAbsolute().
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Rotator Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/rotator/{device_number}/halt':
    put:
      summary: Immediatley stops rotator motion.
      description: >-
        Immediately stop any Rotator motion due to a previous Move or
        MoveAbsolute method call.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Rotator Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/rotator/{device_number}/move':
    put:
      summary: Moves the rotator to a new relative position.
      description: >-
        Causes the rotator to move Position degrees relative to the current
        Position value.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Rotator Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Position:
                  description: Relative position to move in degrees from current Position.
                  type: number
                  format: double
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Position
  '/rotator/{device_number}/moveabsolute':
    put:
      summary: Moves the rotator to a new absolute position.
      description: Causes the rotator to move the absolute position of Position degrees.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Rotator Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Position:
                  description: Absolute position in degrees.
                  type: number
                  format: double
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Position
  '/rotator/{device_number}/movemechanical':
    put:
      summary: Moves the rotator to a new raw mechanical position.
      description: Causes the rotator to move the mechanical position of Position degrees.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Rotator Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Position:
                  description: Absolute position in degrees.
                  type: number
                  format: double
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Position
  '/rotator/{device_number}/sync':
    put:
      summary: Syncs the rotator to the specified position angle without moving it.
      description: Causes the rotator to sync to the position of Position degrees.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Rotator Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Position:
                  description: Absolute position in degrees.
                  type: number
                  format: double
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Position
  '/safetymonitor/{device_number}/issafe':
    get:
      summary: Indicates whether the monitored state is safe for use.
      description: >-
        Indicates whether the monitored state is safe for use. True if the state
        is safe, False if it is unsafe.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - SafetyMonitor Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/switch/{device_number}/maxswitch':
    get:
      summary: The number of switch devices managed by this driver
      description: >-
        Returns the number of switch devices managed by this driver. Devices are
        numbered from 0 to MaxSwitch - 1
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/switch/{device_number}/canwrite':
    get:
      summary: Indicates whether the specified switch device can be written to
      description: >-
        Reports if the specified switch device can be written to, default true.
        This is false if the device cannot be written to, for example a limit
        switch or a sensor.  Devices are numbered from 0 to MaxSwitch - 1
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/SwitchNumberQuery'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/switch/{device_number}/getswitch':
    get:
      summary: Return the state of switch device id as a boolean
      description: >-
        Return the state of switch device id as a boolean.  Devices are numbered
        from 0 to MaxSwitch - 1
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/SwitchNumberQuery'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/switch/{device_number}/getswitchdescription':
    get:
      summary: Gets the description of the specified switch device
      description: >-
        Gets the description of the specified switch device. This is to allow a
        fuller description of the device to be returned, for example for a tool
        tip. Devices are numbered from 0 to MaxSwitch - 1
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/SwitchNumberQuery'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/switch/{device_number}/getswitchname':
    get:
      summary: Gets the name of the specified switch device
      description: >-
        Gets the name of the specified switch device. Devices are numbered from
        0 to MaxSwitch - 1
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/SwitchNumberQuery'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/switch/{device_number}/getswitchvalue':
    get:
      summary: Gets the value of the specified switch device as a double
      description: >-
        Gets the value of the specified switch device as a double. Devices are
        numbered from 0 to MaxSwitch - 1, The value of this switch is expected
        to be between MinSwitchValue and MaxSwitchValue.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/SwitchNumberQuery'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/switch/{device_number}/minswitchvalue':
    get:
      summary: Gets the minimum value of the specified switch device as a double
      description: >-
        Gets the minimum value of the specified switch device as a double.
        Devices are numbered from 0 to MaxSwitch - 1.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/SwitchNumberQuery'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/switch/{device_number}/maxswitchvalue':
    get:
      summary: Gets the maximum value of the specified switch device as a double
      description: >-
        Gets the maximum value of the specified switch device as a double.
        Devices are numbered from 0 to MaxSwitch - 1.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/SwitchNumberQuery'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/switch/{device_number}/setswitch':
    put:
      summary: 'Sets a switch controller device to the specified state, true or false'
      description: 'Sets a switch controller device to the specified state, true or false.'
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Switch Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Id:
                  description: The device number (0 to MaxSwitch - 1)
                  type: integer
                  format: int32
                State:
                  description: The required control state (True or False)
                  type: boolean
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Id
                - State
  '/switch/{device_number}/setswitchname':
    put:
      summary: Sets a switch device name to the specified value
      description: Sets a switch device name to the specified value.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Switch Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Id:
                  description: The device number (0 to MaxSwitch - 1)
                  type: integer
                Name:
                  description: The name of the device
                  type: string
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Id
                - Name
  '/switch/{device_number}/setswitchvalue':
    put:
      summary: Sets a switch device value to the specified value
      description: Sets a switch device value to the specified value.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Switch Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Id:
                  description: The device number (0 to MaxSwitch - 1)
                  type: integer
                  format: int32
                Value:
                  description: >-
                    The value to be set, between MinSwitchValue and
                    MaxSwitchValue
                  type: number
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Id
                - Value
  '/switch/{device_number}/switchstep':
    get:
      summary: >-
        Returns the step size that this device supports (the difference between
        successive values of the device).
      description: >-
        Returns the step size that this device supports (the difference between
        successive values of the device). Devices are numbered from 0 to
        MaxSwitch - 1.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/SwitchNumberQuery'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/alignmentmode':
    get:
      summary: Returns the current mount alignment mode
      description: >-
        Returns the alignment mode of the mount (Alt/Az, Polar, German Polar). 
        The alignment mode is specified as an integer value from the
        AlignmentModes Enum.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/altitude':
    get:
      summary: Returns the mount's altitude above the horizon.
      description: >-
        The altitude above the local horizon of the mount's current position
        (degrees, positive up)
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/aperturearea':
    get:
      summary: Returns the telescope's aperture.
      description: >-
        The area of the telescope's aperture, taking into account any
        obstructions (square meters)
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/aperturediameter':
    get:
      summary: Returns the telescope's effective aperture.
      description: The telescope's effective aperture diameter (meters)
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/athome':
    get:
      summary: Indicates whether the mount is at the home position.
      description: >-
        True if the mount is stopped in the Home position. Set only following a
        FindHome()  operation, and reset with any slew operation. This property
        must be False if the telescope does not support homing.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/atpark':
    get:
      summary: Indicates whether the telescope is at the park position.
      description: >-
        True if the telescope has been put into the parked state by the seee
        Park()  method. Set False by calling the Unpark() method.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/azimuth':
    get:
      summary: Returns the mount's azimuth.
      description: >-
        The azimuth at the local horizon of the mount's current position
        (degrees, North-referenced, positive East/clockwise).
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/canfindhome':
    get:
      summary: Indicates whether the mount can find the home position.
      description: >-
        True if this telescope is capable of programmed finding its home
        position (FindHome()  method).
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/canpark':
    get:
      summary: Indicates whether the telescope can be parked.
      description: True if this telescope is capable of programmed parking (Park() method)
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/canpulseguide':
    get:
      summary: Indicates whether the telescope can be pulse guided.
      description: >-
        True if this telescope is capable of software-pulsed guiding (via the
        PulseGuide(GuideDirections, Int32) method)
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/cansetdeclinationrate':
    get:
      summary: Indicates whether the DeclinationRate property can be changed.
      description: >-
        True if the DeclinationRate property can be changed to provide offset
        tracking in the declination axis.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/cansetguiderates':
    get:
      summary: Indicates whether the DeclinationRate property can be changed.
      description: >-
        True if the guide rate properties used for PulseGuide(GuideDirections,
        Int32) can ba adjusted.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/cansetpark':
    get:
      summary: Indicates whether the telescope park position can be set.
      description: >-
        True if this telescope is capable of programmed setting of its park
        position (SetPark() method)
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/cansetpierside':
    get:
      summary: Indicates whether the telescope SideOfPier can be set.
      description: >-
        True if the SideOfPier property can be set, meaning that the mount can
        be forced to flip.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/cansetrightascensionrate':
    get:
      summary: Indicates whether the RightAscensionRate property can be changed.
      description: >-
        True if the RightAscensionRate property can be changed to provide offset
        tracking in the right ascension axis. .
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/cansettracking':
    get:
      summary: Indicates whether the Tracking property can be changed.
      description: >-
        True if the Tracking property can be changed, turning telescope sidereal
        tracking on and off.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/canslew':
    get:
      summary: Indicates whether the telescope can slew synchronously.
      description: >-
        True if this telescope is capable of programmed slewing (synchronous or
        asynchronous) to equatorial coordinates
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/canslewaltaz':
    get:
      summary: >-
        Indicates whether the telescope can slew synchronously to AltAz
        coordinates.
      description: >-
        True if this telescope is capable of programmed slewing (synchronous or
        asynchronous) to local horizontal coordinates
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/canslewaltazasync':
    get:
      summary: >-
        Indicates whether the telescope can slew asynchronously to AltAz
        coordinates.
      description: >-
        True if this telescope is capable of programmed asynchronous slewing to
        local horizontal coordinates
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/canslewasync':
    get:
      summary: Indicates whether the telescope can slew asynchronously.
      description: >-
        True if this telescope is capable of programmed asynchronous slewing to
        equatorial coordinates.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/cansync':
    get:
      summary: Indicates whether the telescope can sync to equatorial coordinates.
      description: >-
        True if this telescope is capable of programmed synching to equatorial
        coordinates.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/cansyncaltaz':
    get:
      summary: >-
        Indicates whether the telescope can sync to local horizontal
        coordinates.
      description: >-
        True if this telescope is capable of programmed synching to local
        horizontal coordinates
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/canunpark':
    get:
      summary: Indicates whether the telescope can be unparked.
      description: True if this telescope is capable of programmed unparking (UnPark() method)
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/declination':
    get:
      summary: Returns the mount's declination.
      description: >-
        The declination (degrees) of the mount's current equatorial
        coordinates, in the coordinate system given by the EquatorialSystem
        property. Reading the property will raise an error if the value is
        unavailable.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/declinationrate':
    get:
      summary: Returns the telescope's declination tracking rate.
      description: 'The declination tracking rate (arcseconds per second, default = 0.0)'
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the telescope's declination tracking rate.
      description: Sets the declination tracking rate (arcseconds per second)
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DeclinationRate:
                  description: Declination tracking rate (arcseconds per second)
                  type: number
                  format: double
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - DeclinationRate
  '/telescope/{device_number}/doesrefraction':
    get:
      summary: Indicates whether atmospheric refraction is applied to coordinates.
      description: >-
        True if the telescope or driver applies atmospheric refraction to
        coordinates.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Determines whether atmospheric refraction is applied to coordinates.
      description: >-
        Causes the rotator to move Position degrees relative to the current
        Position value.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DoesRefraction:
                  description: >-
                    Set True to make the telescope or driver applie atmospheric
                    refraction to coordinates.
                  type: boolean
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - DoesRefraction
  '/telescope/{device_number}/equatorialsystem':
    get:
      summary: Returns the current equatorial coordinate system used by this telescope.
      description: >-
        Returns the current equatorial coordinate system used by this telescope
        (e.g. Topocentric or J2000).
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/focallength':
    get:
      summary: Returns the telescope's focal length in meters.
      description: The telescope's focal length in meters
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/guideratedeclination':
    get:
      summary: Returns the  current Declination rate offset for telescope guiding
      description: >-
        The current Declination movement rate offset for telescope guiding
        (degrees/sec)
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the  current Declination rate offset for telescope guiding.
      description: >-
        Sets the current Declination movement rate offset for telescope guiding
        (degrees/sec).
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                GuideRateDeclination:
                  description: Declination movement rate offset degrees/sec).
                  type: number
                  format: double
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - GuideRateDeclination
  '/telescope/{device_number}/guideraterightascension':
    get:
      summary: Returns the  current RightAscension rate offset for telescope guiding
      description: >-
        The current RightAscension movement rate offset for telescope guiding
        (degrees/sec)
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the  current RightAscension rate offset for telescope guiding.
      description: >-
        Sets the current RightAscension movement rate offset for telescope
        guiding (degrees/sec).
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                GuideRateRightAscension:
                  description: RightAscension movement rate offset degrees/sec).
                  type: number
                  format: double
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - GuideRateRightAscension
  '/telescope/{device_number}/ispulseguiding':
    get:
      summary: >-
        Indicates whether the telescope is currently executing a PulseGuide
        command
      description: >-
        True if a PulseGuide(GuideDirections, Int32) command is in progress,
        False otherwise
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/rightascension':
    get:
      summary: Returns the mount's right ascension coordinate.
      description: >-
        The right ascension (hours) of the mount's current equatorial
        coordinates, in the coordinate system given by the EquatorialSystem
        property
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/rightascensionrate':
    get:
      summary: Returns the telescope's right ascension tracking rate.
      description: 'The right ascension tracking rate (arcseconds per second, default = 0.0)'
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the telescope's right ascension tracking rate.
      description: Sets the right ascension tracking rate (arcseconds per second)
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                RightAscensionRate:
                  description: Right ascension tracking rate (arcseconds per second)
                  type: number
                  format: double
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - RightAscensionRate
  '/telescope/{device_number}/sideofpier':
    get:
      summary: Returns the mount's pointing state.
      description: >-
        Indicates the pointing state of the mount. 0 = pierEast, 1 = pierWest,
        -1= pierUnknown
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the mount's pointing state.
      description: 'Sets the pointing state of the mount. 0 = pierEast, 1 = pierWest'
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SideOfPier:
                  description: New pointing state.
                  type: integer
                  format: int32
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - SideOfPier
  '/telescope/{device_number}/siderealtime':
    get:
      summary: Returns the local apparent sidereal time.
      description: >-
        The local apparent sidereal time from the telescope's internal clock
        (hours, sidereal).
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/siteelevation':
    get:
      summary: Returns the observing site's elevation above mean sea level.
      description: >-
        The elevation above mean sea level (meters) of the site at which the
        telescope is located.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the observing site's elevation above mean sea level.
      description: >-
        Sets the elevation above mean sea level (metres) of the site at which
        the telescope is located.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SiteElevation:
                  description: Elevation above mean sea level (metres).
                  type: number
                  format: double
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - SiteElevation
  '/telescope/{device_number}/sitelatitude':
    get:
      summary: Returns the observing site's latitude.
      description: >-
        The geodetic(map) latitude (degrees, positive North, WGS84) of the site
        at which the telescope is located.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the observing site's latitude.
      description: Sets the observing site's latitude (degrees).
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SiteLatitude:
                  description: Site latitude (degrees)
                  type: number
                  format: double
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - SiteLatitude
  '/telescope/{device_number}/sitelongitude':
    get:
      summary: Returns the observing site's longitude.
      description: >-
        The longitude (degrees, positive East, WGS84) of the site at which the
        telescope is located.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the observing site's longitude.
      description: 'Sets the observing site''s longitude (degrees, positive East, WGS84).'
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SiteLongitude:
                  description: 'Site longitude (degrees, positive East, WGS84)'
                  type: number
                  format: double
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - SiteLongitude
  '/telescope/{device_number}/slewing':
    get:
      summary: Indicates whether the telescope is currently slewing.
      description: >-
        True if telescope is currently moving in response to one of the Slew
        methods or the MoveAxis(TelescopeAxes, Double) method, False at all
        other times.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/slewsettletime':
    get:
      summary: Returns the post-slew settling time.
      description: Returns the post-slew settling time (sec.).
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the post-slew settling time.
      description: Sets the  post-slew settling time (integer sec.).
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SlewSettleTime:
                  description: Settling time (integer sec.).
                  type: integer
                  format: int32
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - SlewSettleTime
  '/telescope/{device_number}/targetdeclination':
    get:
      summary: Returns the current target declination.
      description: >-
        The declination (degrees, positive North) for the target of an
        equatorial slew or sync operation
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the target declination of a slew or sync.
      description: >-
        Sets the declination (degrees, positive North) for the target of an
        equatorial slew or sync operation
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TargetDeclination:
                  description: Target declination(degrees)
                  type: number
                  format: double
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - TargetDeclination
  '/telescope/{device_number}/targetrightascension':
    get:
      summary: Returns the current target right ascension.
      description: >-
        The right ascension (hours) for the target of an equatorial slew or sync
        operation
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the target right ascension of a slew or sync.
      description: >-
        Sets the right ascension (hours) for the target of an equatorial slew or
        sync operation
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TargetRightAscension:
                  description: Target right ascension(hours)
                  type: number
                  format: double
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - TargetRightAscension
  '/telescope/{device_number}/tracking':
    get:
      summary: Indicates whether the telescope is tracking.
      description: Returns the state of the telescope's sidereal tracking drive.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Enables or disables telescope tracking.
      description: Sets the state of the telescope's sidereal tracking drive.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Tracking:
                  description: Tracking enabled / disabled
                  type: boolean
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Tracking
  '/telescope/{device_number}/trackingrate':
    get:
      summary: Returns the current tracking rate.
      description: The current tracking rate of the telescope's sidereal drive.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the mount's tracking rate.
      description: >-
        Sets the tracking rate of the telescope's sidereal drive. 0 =
        driveSidereal, 1 = driveLunar, 2 = driveSolar, 3 = driveKing
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TrackingRate:
                  description: New tracking rate
                  type: integer
                  format: int32
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - TrackingRate
  '/telescope/{device_number}/trackingrates':
    get:
      summary: Returns a collection of supported DriveRates values.
      description: >-
        Returns an array of supported DriveRates values that describe the
        permissible values of the TrackingRate property for this telescope type.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriveRatesResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/utcdate':
    get:
      summary: Returns the UTC date/time of the telescope's internal clock.
      description: >-
        The UTC date/time of the telescope's internal clock in ISO 8601 format
        including fractional seconds. The general format (in Microsoft custom
        date format style) is yyyy-MM-ddTHH:mm:ss.fffffffZ E.g.
        2016-03-04T17:45:31.1234567Z or 2016-11-14T07:03:08.1234567Z Please note
        the compulsary trailing Z indicating the 'Zulu', UTC time zone.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
    put:
      summary: Sets the UTC date/time of the telescope's internal clock.
      description: >-
        The UTC date/time of the telescope's internal clock in ISO 8601 format
        including fractional seconds. The general format (in Microsoft custom
        date format style) is yyyy-MM-ddTHH:mm:ss.fffffffZ E.g.
        2016-03-04T17:45:31.1234567Z or 2016-11-14T07:03:08.1234567Z Please note
        the compulsary trailing Z indicating the 'Zulu', UTC time zone.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                UTCDate:
                  description: UTC date/time in ISO 8601 format.
                  type: string
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - UTCDate
  '/telescope/{device_number}/abortslew':
    put:
      summary: Immediatley stops a slew in progress.
      description: Immediately Stops a slew in progress.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/telescope/{device_number}/axisrates':
    get:
      summary: >-
        Returns the rates at which the telescope may be moved about the
        specified axis.
      description: >-
        The rates at which the telescope may be moved about the specified axis
        by the MoveAxis(TelescopeAxes, Double) method.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
        - $ref: '#/components/parameters/AxisQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AxisRatesResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/canmoveaxis':
    get:
      summary: Indicates whether the telescope can move the requested axis.
      description: True if this telescope can move the requested axis.
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/AxisQuery'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoolResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/destinationsideofpier':
    get:
      summary: >-
        Predicts the pointing state after a German equatorial mount slews to
        given coordinates.
      description: >-
        Predicts the pointing state that a German equatorial mount will be in if
        it slews to the given coordinates. The  return value will be one of - 0
        = pierEast, 1 = pierWest, -1 = pierUnknown
      parameters:
        - $ref: '#/components/parameters/device_number'
        - $ref: '#/components/parameters/RightAscensionQuery'
        - $ref: '#/components/parameters/DeclinationQuery'
        - $ref: '#/components/parameters/ClientIDQuery'
        - $ref: '#/components/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Driver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
  '/telescope/{device_number}/findhome':
    put:
      summary: Moves the mount to the "home" position.
      description: Locates the telescope's "home" position (synchronous)
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/telescope/{device_number}/moveaxis':
    put:
      summary: Moves a telescope axis at the given rate.
      description: Move the telescope in one axis at the given rate.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Axis:
                  description: >-
                    The axis about which rate information is desired. 0 = axisPrimary, 1 = axisSecondary, 2 = axisTertiary.
                  type: integer
                  default: 0
                  minimum: 0
                  maximum: 2
                Rate:
                  description: The rate of motion (deg/sec) about the specified axis
                  type: number
                  default: 0
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Axis
                - Rate
  '/telescope/{device_number}/park':
    put:
      summary: Park the mount
      description: >-
        Move the telescope to its park position, stop all motion (or restrict to
        a small safe range), and set AtPark to True. )
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/telescope/{device_number}/pulseguide':
    put:
      summary: Moves the scope in the given direction for the given time.
      description: >-
        Moves the scope in the given direction for the given interval or time at
        the rate given by the corresponding guide rate property
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Direction:
                  description: >-
                    The direction in which the guide-rate motion is to be made.
                    0 = guideNorth, 1 = guideSouth, 2 = guideEast, 3 = guideWest
                  type: integer
                  format: int32
                  default: 0
                Duration:
                  description: The duration of the guide-rate motion (milliseconds)
                  type: integer
                  format: int32
                  default: 5
                ClientID:
                  description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                  type: integer
                  format: uint32
                ClientTransactionID:
                  description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                  type: integer
                  format: uint32
              required:
                - Direction
                - Duration
  '/telescope/{device_number}/setpark':
    put:
      summary: Sets the telescope's park position
      description: Sets the telescope's park position to be its current position.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/telescope/{device_number}/slewtoaltaz':
    put:
      summary: Synchronously slew to the given local horizontal coordinates.
      description: >-
        Move the telescope to the given local horizontal coordinates, return
        when slew is complete
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtoaltaz'
  '/telescope/{device_number}/slewtoaltazasync':
    put:
      summary: Asynchronously slew to the given local horizontal coordinates.
      description: >-
        Move the telescope to the given local horizontal coordinates, return
        immediatley after the slew starts. The client can poll the Slewing
        method to determine when the mount reaches the intended coordinates.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtoaltaz'
  '/telescope/{device_number}/slewtocoordinates':
    put:
      summary: Synchronously slew to the given equatorial coordinates.
      description: >-
        Move the telescope to the given equatorial coordinates, return when slew
        is complete
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtocoordinates'
  '/telescope/{device_number}/slewtocoordinatesasync':
    put:
      summary: Asynchronously slew to the given equatorial coordinates.
      description: >-
        Move the telescope to the given equatorial coordinates, return
        immediatley after the slew starts. The client can poll the Slewing
        method to determine when the mount reaches the intended coordinates.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtocoordinates'
  '/telescope/{device_number}/slewtotarget':
    put:
      summary: >-
        Synchronously slew to the TargetRightAscension and TargetDeclination
        coordinates.
      description: >-
        Move the telescope to the TargetRightAscension and TargetDeclination
        equatorial coordinates, return when slew is complete
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/telescope/{device_number}/slewtotargetasync':
    put:
      summary: >-
        Asynchronously slew to the TargetRightAscension and TargetDeclination
        coordinates.
      description: >-
        Move the telescope to the TargetRightAscension and TargetDeclination
        equatorial coordinates, return immediatley after the slew starts. The
        client can poll the Slewing method to determine when the mount reaches
        the intended coordinates.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/telescope/{device_number}/synctoaltaz':
    put:
      summary: Syncs to the given local horizontal coordinates.
      description: >-
        Matches the scope's local horizontal coordinates to the given local
        horizontal coordinates.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtoaltaz'
  '/telescope/{device_number}/synctocoordinates':
    put:
      summary: Syncs to the given equatorial coordinates.
      description: >-
        Matches the scope's equatorial coordinates to the given equatorial
        coordinates.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtocoordinates'
  '/telescope/{device_number}/synctotarget':
    put:
      summary: Syncs to the TargetRightAscension and TargetDeclination coordinates.
      description: >-
        Matches the scope's equatorial coordinates to the TargetRightAscension
        and TargetDeclination equatorial coordinates.
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
  '/telescope/{device_number}/unpark':
    put:
      summary: Unparks the mount.
      description: Takes telescope out of the Parked state. )
      parameters:
        - $ref: '#/components/parameters/device_number'
      tags:
        - Telescope Specific Methods
      responses:
        '200':
          description: Transaction complete or exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '400':
          description: 'Method or parameter value error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
        '500':
          description: 'Server internal error, check error message'
          content:
            text/plain:
              schema:
                type: string
                description: Error message describing why the command cannot be processed
      requestBody:
        $ref: '#/components/requestBodies/putStandardClientParameters'
components:
  parameters:
    device_type:
      name: device_type
      description: One of the recognised ASCOM device types e.g. telescope (must be lower case)
      in: path
      required: true
      schema:
        type: string
        default: telescope
        pattern: '^[a-z]*$'
    device_number:
      name: device_number
      description: Zero based device number as set on the server (0 to 4294967295)
      in: path
      required: true
      schema:
        type: integer
        format: uint32
        default: 0
        minimum: 0
        maximum: 4294967295
    ClientIDQuery:
      name: ClientID
      description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
      in: query
      required: false
      schema:
        type: integer
        format: uint32
        default: 1
        minimum: 0
        maximum: 4294967295
    ClientTransactionIDQuery:
      name: ClientTransactionID
      description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
      in: query
      required: false
      schema:
        type: integer
        format: uint32
        default: 1234
        minimum: 0
        maximum: 4294967295
    RightAscensionQuery:
      name: RightAscension
      description: Right Ascension coordinate (0.0 to 23.99999999 hours)
      in: query
      required: true
      schema:
        type: number
        default: 3.0
        minimum: 0.0
        maximum: 23.9999999999
    DeclinationQuery:
      name: Declination
      description: Declination coordinate (-90.0 to +90.0 degrees)
      in: query
      required: true
      schema:
        type: number
        default: 0.0
        minimum: -90.0
        maximum: 90.0
    AxisQuery:
      name: Axis
      description: >-
        The axis about which rate information is desired. 0 = axisPrimary, 1 =
        axisSecondary, 2 = axisTertiary.
      in: query
      required: true
      schema:
        type: integer
        format: int32
        default: 0
        minimum: 0
        maximum: 2
    SwitchNumberQuery:
      name: Id
      description: The device number (0 to MaxSwitch - 1)
      in: query
      required: true
      schema:
        type: integer
        format: int32
        default: 0
        minimum: 0
        maximum: 2147483647
  requestBodies:
    put_devicetype_Devicenumber_commandblind:
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              Command:
                description: The literal command string to be transmitted.
                type: string
              Raw:
                description: >-
                  If set to true the string is transmitted 'as-is', if set to
                  false then protocol framing characters may be added prior to
                  transmission
                type: string
              ClientID:
                description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                type: integer
                format: uint32
                minimum: 0
                maximum: 4294967295
              ClientTransactionID:
                description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                type: integer
                format: uint32
                minimum: 0
                maximum: 4294967295
            required:
              - Command
              - Raw
    putStandardClientParameters:
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              ClientID:
                description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                type: integer
                format: uint32
                minimum: 0
                maximum: 4294967295
              ClientTransactionID:
                description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                type: integer
                format: uint32
                minimum: 0
                maximum: 4294967295
    putDome_devicenumber_slewtoazimuth:
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              Azimuth:
                description: >-
                  Target dome azimuth (degrees, North zero and increasing
                  clockwise. i.e., 90 East, 180 South, 270 West)
                type: number
              ClientID:
                description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                type: integer
                format: uint32
                minimum: 0
                maximum: 4294967295
              ClientTransactionID:
                description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                type: integer
                format: uint32
                minimum: 0
                maximum: 4294967295
            required:
              - Azimuth
    putTelescope_devicenumber_slewtoaltaz:
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              Azimuth:
                description: >-
                  Azimuth coordinate (degrees, North-referenced, positive
                  East/clockwise)
                type: number
              Altitude:
                description: 'Altitude coordinate (degrees, positive up)'
                type: number
              ClientID:
                description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                type: integer
                format: uint32
                minimum: 0
                maximum: 4294967295
              ClientTransactionID:
                description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                type: integer
                format: uint32
                minimum: 0
                maximum: 4294967295
            required:
              - Azimuth
              - Altitude
    putTelescope_devicenumber_slewtocoordinates:
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              RightAscension:
                description: Right Ascension coordinate (hours)
                type: number
              Declination:
                description: Declination coordinate (degrees)
                type: number
              ClientID:
                description: Client's unique ID. (0 to 4294967295). The client should choose a value at start-up, e.g. a random value between 0 and 65535, and send this value on every transaction to help associate entries in device logs with this particular client.
                type: integer
                format: uint32
                minimum: 0
                maximum: 4294967295
              ClientTransactionID:
                description: Client's transaction ID. (0 to 4294967295). The client should start this count at 1 and increment by one on each successive transaction. This will aid associating entries in device logs with corresponding entries in client side logs.
                type: integer
                format: uint32
                minimum: 0
                maximum: 4294967295
            required:
              - RightAscension
              - Declination
  schemas:
    ImageArrayResponse:
      type: object
      properties:
        Type:
          type: integer
          format: int32
          description: >-
            0 = Unknown, 1 = Short(int16), 2 = Integer (int32), 3 = Double (Double precision real number).
          minimum: 0
          maximum: 3
        Rank:
          type: integer
          format: int32
          description: The array's rank, will be 2 (single plane image (monochrome)) or 3 (multi-plane image).
        Value:
          type: array
          items:
            type: array
            items:
              type: number
              description: Returned integer or double value
        ClientTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Client's transaction ID (0 to 4294967295), as supplied by the client in the command request.
        ServerTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Server's transaction ID (0 to 4294967295), should be unique for each client transaction so that log messages on the client can be associated with logs on the device.
        ErrorNumber:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: >- 
            Zero for a successful transaction, or a non-zero integer (-2147483648 to 2147483647) if the device encountered an issue. Devices must use ASCOM reserved error numbers whenever appropriate so that clients can take informed actions. E.g. returning 0x401 (1025) to indicate that an invalid value was received (see Alpaca API definition and developer documentation for further information).
        ErrorMessage:
          type: string
          description: Empty string for a successful transaction, or a message describing the issue that was encountered.
    BoolResponse:
      type: object
      properties:
        Value:
          type: boolean
          description: True or False value
        ClientTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Client's transaction ID (0 to 4294967295), as supplied by the client in the command request.
        ServerTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Server's transaction ID (0 to 4294967295), should be unique for each client transaction so that log messages on the client can be associated with logs on the device.
        ErrorNumber:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: >- 
            Zero for a successful transaction, or a non-zero integer (-2147483648 to 2147483647) if the device encountered an issue. Devices must use ASCOM reserved error numbers whenever appropriate so that clients can take informed actions. E.g. returning 0x401 (1025) to indicate that an invalid value was received (see Alpaca API definition and developer documentation for further information).
        ErrorMessage:
          type: string
          description: Empty string for a successful transaction, or a message describing the issue that was encountered. If an error message is returned, a non zero error number must also be returned.
    DoubleResponse:
      type: object
      properties:
        Value:
          type: number
          format: double
          description: Returned double value
        ClientTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Client's transaction ID (0 to 4294967295), as supplied by the client in the command request.
        ServerTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Server's transaction ID (0 to 4294967295), should be unique for each client transaction so that log messages on the client can be associated with logs on the device.
        ErrorNumber:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: >- 
            Zero for a successful transaction, or a non-zero integer (-2147483648 to 2147483647) if the device encountered an issue. Devices must use ASCOM reserved error numbers whenever appropriate so that clients can take informed actions. E.g. returning 0x401 (1025) to indicate that an invalid value was received (see Alpaca API definition and developer documentation for further information).
        ErrorMessage:
          type: string
          description: Empty string for a successful transaction, or a message describing the issue that was encountered. If an error message is returned, a non zero error number must also be returned.
    IntResponse:
      type: object
      properties:
        Value:
          type: integer
          format: int32
          description: Returned integer value
        ClientTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Client's transaction ID (0 to 4294967295), as supplied by the client in the command request.
        ServerTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Server's transaction ID (0 to 4294967295), should be unique for each client transaction so that log messages on the client can be associated with logs on the device.
        ErrorNumber:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: >- 
            Zero for a successful transaction, or a non-zero integer (-2147483648 to 2147483647) if the device encountered an issue. Devices must use ASCOM reserved error numbers whenever appropriate so that clients can take informed actions. E.g. returning 0x401 (1025) to indicate that an invalid value was received (see Alpaca API definition and developer documentation for further information).
        ErrorMessage:
          type: string
          description: Empty string for a successful transaction, or a message describing the issue that was encountered. If an error message is returned, a non zero error number must also be returned.
    IntArrayResponse:
      type: object
      properties:
        Value:
          type: array
          items:
            type: integer
            format: int32
          description: Array of integer values.
        ClientTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Client's transaction ID (0 to 4294967295), as supplied by the client in the command request.
        ServerTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Server's transaction ID (0 to 4294967295), should be unique for each client transaction so that log messages on the client can be associated with logs on the device.
        ErrorNumber:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: >- 
            Zero for a successful transaction, or a non-zero integer (-2147483648 to 2147483647) if the device encountered an issue. Devices must use ASCOM reserved error numbers whenever appropriate so that clients can take informed actions. E.g. returning 0x401 (1025) to indicate that an invalid value was received (see Alpaca API definition and developer documentation for further information).
        ErrorMessage:
          type: string
          description: Empty string for a successful transaction, or a message describing the issue that was encountered. If an error message is returned, a non zero error number must also be returned.
    MethodResponse:
      type: object
      properties:
        ClientTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Client's transaction ID (0 to 4294967295), as supplied by the client in the command request.
        ServerTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Server's transaction ID (0 to 4294967295), should be unique for each client transaction so that log messages on the client can be associated with logs on the device.
        ErrorNumber:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: >- 
            Zero for a successful transaction, or a non-zero integer (-2147483648 to 2147483647) if the device encountered an issue. Devices must use ASCOM reserved error numbers whenever appropriate so that clients can take informed actions. E.g. returning 0x401 (1025) to indicate that an invalid value was received (see Alpaca API definition and developer documentation for further information).
        ErrorMessage:
          type: string
          description: Empty string for a successful transaction, or a message describing the issue that was encountered. If an error message is returned, a non zero error number must also be returned.
    StringResponse:
      type: object
      properties:
        Value:
          type: string
          description: String response from the device.
        ClientTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Client's transaction ID (0 to 4294967295), as supplied by the client in the command request.
        ServerTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Server's transaction ID (0 to 4294967295), should be unique for each client transaction so that log messages on the client can be associated with logs on the device.
        ErrorNumber:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: >- 
            Zero for a successful transaction, or a non-zero integer (-2147483648 to 2147483647) if the device encountered an issue. Devices must use ASCOM reserved error numbers whenever appropriate so that clients can take informed actions. E.g. returning 0x401 (1025) to indicate that an invalid value was received (see Alpaca API definition and developer documentation for further information).
        ErrorMessage:
          type: string
          description: Empty string for a successful transaction, or a message describing the issue that was encountered. If an error message is returned, a non zero error number must also be returned.
    StringArrayResponse:
      type: object
      properties:
        Value:
          type: array
          items:
            type: string
          description: Array of string values.
        ClientTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Client's transaction ID (0 to 4294967295), as supplied by the client in the command request.
        ServerTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Server's transaction ID (0 to 4294967295), should be unique for each client transaction so that log messages on the client can be associated with logs on the device.
        ErrorNumber:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: >- 
            Zero for a successful transaction, or a non-zero integer (-2147483648 to 2147483647) if the device encountered an issue. Devices must use ASCOM reserved error numbers whenever appropriate so that clients can take informed actions. E.g. returning 0x401 (1025) to indicate that an invalid value was received (see Alpaca API definition and developer documentation for further information).
        ErrorMessage:
          type: string
          description: Empty string for a successful transaction, or a message describing the issue that was encountered. If an error message is returned, a non zero error number must also be returned.
    AxisRatesResponse:
      type: object
      properties:
        Value:
          description: Array of AxisRate objects
          type: array
          minItems: 0
          uniqueItems: true
          items:
            $ref: '#/components/schemas/AxisRate'
        ClientTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Client's transaction ID (0 to 4294967295), as supplied by the client in the command request.
        ServerTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Server's transaction ID (0 to 4294967295), should be unique for each client transaction so that log messages on the client can be associated with logs on the device.
        ErrorNumber:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: >- 
            Zero for a successful transaction, or a non-zero integer (-2147483648 to 2147483647) if the device encountered an issue. Devices must use ASCOM reserved error numbers whenever appropriate so that clients can take informed actions. E.g. returning 0x401 (1025) to indicate that an invalid value was received (see Alpaca API definition and developer documentation for further information).
        ErrorMessage:
          type: string
          description: Empty string for a successful transaction, or a message describing the issue that was encountered. If an error message is returned, a non zero error number must also be returned.
    AxisRate:
      description: Axis rate object
      type: object
      properties:
        Maximum:
          description: >-
            The maximum rate (degrees per second) This must always be a positive
            number. It indicates the maximum rate in either direction about the
            axis.
          type: number
        Minimum:
          description: >-
            The minimum rate (degrees per second) This must always be a positive
            number. It indicates the maximum rate in either direction about the
            axis.
          type: number
      required:
        - Maximum
        - Minimum
    DriveRatesResponse:
      type: object
      properties:
        Value:
          description: Array of DriveRate values
          type: array
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/DriveRate'
        ClientTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Client's transaction ID (0 to 4294967295), as supplied by the client in the command request.
        ServerTransactionID:
          type: integer
          format: uint32
          minimum: 0
          maximum: 4294967295
          description: Server's transaction ID (0 to 4294967295), should be unique for each client transaction so that log messages on the client can be associated with logs on the device.
        ErrorNumber:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: >- 
            Zero for a successful transaction, or a non-zero integer (-2147483648 to 2147483647) if the device encountered an issue. Devices must use ASCOM reserved error numbers whenever appropriate so that clients can take informed actions. E.g. returning 0x401 (1025) to indicate that an invalid value was received (see Alpaca API definition and developer documentation for further information).
        ErrorMessage:
          type: string
          description: Empty string for a successful transaction, or a message describing the issue that was encountered. If an error message is returned, a non zero error number must also be returned.
    DriveRate:
      description: >-
        DriveRate object corresponding to one of the standard drive rates  

          driveSidereal =  0  - Sidereal tracking rate (15.041 arcseconds per second).  
          driveLunar = 1 - Lunar tracking rate (14.685 arcseconds per second).  
          driveSolar = 2 - Solar tracking rate (15.0 arcseconds per second).  
          driveKing = 3 - King tracking rate (15.0369 arcseconds per second).  
      type: number
      format: int32
      minimum: 0
      maximum: 3
