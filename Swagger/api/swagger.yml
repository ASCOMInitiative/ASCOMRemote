swagger: '2.0'
info:
  title: ASCOM Remote Device Server - Access API
  description: |
    This restful API provides access to ASCOM devices remotely over the web through the ASCOM Remote Device Server.
    
    ## Parameters and Returned values
    For GET operations, parameters should be placed in the URI string and for PUT operations they should be placed in the body of the message.
    
    Responses, as described below, are returned in JSON format and always include a common set of values including: the client's 
    identity number, the client's transaction number, the server's transaction number, the error message, error number and serialised Windows exception.
    The ErrorMessage field will be an empty string, the ErrorNumber field will be zero and the DriverException field will be null if the device driver method executes successfully.
    
    ## HTTP Status Codes and ASCOM Error codes
    The returned HTTP status code refers to the status of the transaction from the perspective of the web application server. 
    Under most circumstances you will receive an http return status code of `200`, indicating that the 
    operation completed successfully within the web application server at the remote location. This does not necessarily mean
    that the operation completed as expected and you must always check one of the ErrorMessage, ErrorNumber or DriverException fields to confirm that the 
    returned result is valid. 
    
    An HTTP status code of `400` indicates that the web application server received a bad URI path or parameter value that it cannot 
    understand and thus cannot forward the command to the device. Check the body of the response for an error message.
    
    An HTTP status code of `500` indicates an unexpected error within the appliation server itself, from which it could not recover. Check 
    the body of the response for an error message.
  version: "1.0.0"
# the domain of the service
host: www.ascom-standards.org
# host: 192.168.254.128
# array of all schemes that your API supports
schemes:
  - http
  - https
# will be prefixed to all paths
basePath: /api/v1
consumes:
  - application/x-www-form-urlencoded
produces:
  - application/json
parameters:
# URL parameters
  DeviceType:
    name: DeviceType
    description: One of the recognised ASCOM device types e.g. Telescope
    type: string
    in: path
    required: true
    default: Telescope
  DeviceNumber:
    name: DeviceNumber
    description: Zero based device number as set on the server
    type: integer
    format: int32
    in: path
    required: true
    default: 0
# Query parameters for GET methods
  ClientIDQuery:
    name: ClientID
    description: Client's unique ID.
    type: integer
    format: int32
    in: query
    required: false
    default: 1
  ClientTransactionIDQuery:
    name: ClientTransactionID
    description: Client's transaction ID.
    type: integer
    format: int32
    in: query
    required: false
    default: 1234
  RightAscensionQuery:
    name: RightAscension
    description: Right Ascension coordinate (hours)
    type: number
    in: query
    required: true
    default: 3.0
  DeclinationQuery:
    name: Declination
    description: Declination coordinate (degrees)
    type: number
    in: query
    required: true
    default: 0.0
  AxisQuery:
    name: Axis
    description: The axis about which rate information is desired. 0 = axisPrimary, 1 = axisSecondary, 2 = axisTertiary.
    type: integer
    format: int32
    in: query
    required: true
    default: 0
  SwitchNumberQuery:
    name: Id
    description: The device number (0 to MaxSwitch - 1)
    type: integer
    format: int32
    in: query
    required: true
    default: 0
# Form parameters for PUT methods
  ClientIDForm:
    name: ClientID
    description: Client's unique ID.
    type: integer
    format: int32
    in: formData
    required: false
    default: 1
  ClientTransactionIDForm:
    name: ClientTransactionID
    description: Client's transaction ID.
    type: integer
    format: int32
    in: formData
    required: false
    default: 1234
  CommandForm:
    name: Command
    description: The literal command string to be transmitted.
    type: string      
    in: formData
    required: true
  RawForm:
    name: Raw
    description: If set to true the string is transmitted 'as-is', if set to false then protocol framing characters may be added prior to transmission
    type: boolean      
    in: formData
    required: true
    allowEmptyValue: false
  RightAscensionForm:
    name: RightAscension
    description: Right Ascension coordinate (hours)
    type: number
    in: formData
    required: true
    default: 3.0
  DeclinationForm:
    name: Declination
    description: Declination coordinate (degrees)
    type: number
    in: formData
    required: true
    default: 0.0
  AltitudeForm:
    name: Altitude
    description: Altitude coordinate (degrees, positive up)
    type: number
    in: formData
    required: true
    default: 60.0
  AzimuthForm:
    name: Azimuth
    description: Azimuth coordinate (degrees, North-referenced, positive East/clockwise)
    type: number
    in: formData
    required: true
    default: 270.0
  DirectionForm:
    name: Direction
    description: Direction of movement (0 = North, 1 = South, 2 = East, 3 = West)
    type: integer
    format: int32
    in: formData
    required: true
    default: 1
  PulseDurationForm:
    name: Duration
    description: Duration of movement in milli-seconds
    type: integer
    format: int32
    in: formData
    required: true
    default: 10
  ExposureDurationForm:
    name: Duration
    description: Duration of exposure in seconds
    type: integer
    format: int32
    in: formData
    required: true
    default: 10
  ExposureLightForm:
    name: Light
    description: True if light frame, false if dark frame.
    type: boolean
    in: formData
    required: true
    allowEmptyValue: false
  DomeAltitudeForm:
    name: Altitude
    description: Target dome altitude (degrees, horizon zero and increasing positive to 90 zenith)
    type: number
    in: formData
    required: true
    default: 60.0
  DomeAzimuthForm:
    name: Azimuth
    description: Target dome azimuth (degrees, North zero and increasing clockwise. i.e., 90 East, 180 South, 270 West)
    type: number
    in: formData
    required: true
    default: 60.0
  SwitchNumberForm:
    name: Id
    description: The device number (0 to MaxSwitch - 1)
    type: integer
    format: int32
    in: formData
    required: true
    default: 0
  SwitchStateForm:
    name: State
    description: The required control state (True or False)
    type: boolean
    in: formData
    required: true
    default: false
  SwitchNameForm:
    name: Name
    description: The name of the device
    type: string
    in: formData
    required: true
    default: New device name
  SwitchValueForm:
    name: Value
    description: The value to be set, between MinSwitchValue and MaxSwitchValue
    type: number
    in: formData
    required: true
    default: 0.0

paths:
# Methods common to all device types
  /{DeviceType}/{DeviceNumber}/Action:
    put:
      summary: Invokes the specified device-specific action.
      description: Invokes the specified device-specific action.
      parameters:
        - $ref: '#/parameters/DeviceType'
        - $ref: '#/parameters/DeviceNumber'
        - name: Action
          description: A well known name that represents the action to be carried out.
          type: string      
          in: formData
          required: true
        - name: Parameters
          description: List of required parameters or an Empty String if none are required
          type: string      
          in: formData
          required: true
          allowEmptyValue: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /{DeviceType}/{DeviceNumber}/CommandBlind:
    put:
      summary: Transmits an arbitrary string to the device
      description: Transmits an arbitrary string to the device and does not wait for a response. Optionally, protocol framing characters may be added to the string before transmission. 
      parameters:
        - $ref: '#/parameters/DeviceType'
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/CommandForm'
        - $ref: '#/parameters/RawForm'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /{DeviceType}/{DeviceNumber}/CommandBool:
    put:
      summary: Transmits an arbitrary string to the device and returns a boolean value from the device.
      description: Transmits an arbitrary string to the device and waits for a boolean response. Optionally, protocol framing characters may be added to the string before transmission. 
      parameters:
        - $ref: '#/parameters/DeviceType'
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/CommandForm'
        - $ref: '#/parameters/RawForm'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /{DeviceType}/{DeviceNumber}/CommandString:
    put:
      summary: Transmits an arbitrary string to the device and returns a string value from the device.
      description: Transmits an arbitrary string to the device and waits for a string response. Optionally, protocol framing characters may be added to the string before transmission. 
      parameters:
        - $ref: '#/parameters/DeviceType'
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/CommandForm'
        - $ref: '#/parameters/RawForm'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/StringResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /{DeviceType}/{DeviceNumber}/Connected:
    get:
      summary: Retrieves the connected state of the device
      description: Retrieves the connected state of the device
      parameters:
        - $ref: '#/parameters/DeviceType'
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the connected state of the device
      description: Sets the connected state of the device
      tags:
        - ASCOM Methods Common To All Devices
      parameters:
        - $ref: '#/parameters/DeviceType'
        - $ref: '#/parameters/DeviceNumber'
        - name: Connected
          description: Set True to connect to the device hardware, set False to disconnect from the device hardware
          type: boolean      
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /{DeviceType}/{DeviceNumber}/Description:
    get:
      summary: Device description
      description: The description of the device
      parameters:
        - $ref: '#/parameters/DeviceType'
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/StringResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /{DeviceType}/{DeviceNumber}/Driverinfo:
    get:
      summary: Device driver description
      description: The description of the driver
      parameters:
        - $ref: '#/parameters/DeviceType'
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/StringResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /{DeviceType}/{DeviceNumber}/DriverVersion:
    get:
      summary: Driver Version
      description: A string containing only the major and minor version of the driver. 
      parameters:
        - $ref: '#/parameters/DeviceType'
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        200:
          description:  Driver response
          schema:
            $ref: '#/definitions/StringResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /{DeviceType}/{DeviceNumber}/Name:
    get:
      summary: Device name
      description: The name of the device
      parameters:
        - $ref: '#/parameters/DeviceType'
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/StringResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /{DeviceType}/{DeviceNumber}/SupportedActions:  
    get:
      summary: Returns the list of action names supported by this driver.
      description: Returns the list of action names supported by this driver.
      parameters:
        - $ref: '#/parameters/DeviceType'
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ASCOM Methods Common To All Devices
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/StringArrayResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

# Switch specific Methods
  /Switch/{DeviceNumber}/MaxSwitch:
    get:
      summary: The number of switch devices managed by this driver 
      description: Returns the number of switch devices managed by this driver. Devices are numbered from 0 to MaxSwitch - 1
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Switch/{DeviceNumber}/CanWrite:
    get:
      summary: Indicates whether the specified switch device can be written to
      description: Reports if the specified switch device can be written to, default true. This is false if the device cannot be written to, for example a limit switch or a sensor.  Devices are numbered from 0 to MaxSwitch - 1
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/SwitchNumberQuery'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Switch/{DeviceNumber}/GetSwitch:
    get:
      summary: Return the state of switch device id as a boolean 
      description: Return the state of switch device id as a boolean.  Devices are numbered from 0 to MaxSwitch - 1
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/SwitchNumberQuery'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Switch/{DeviceNumber}/GetSwitchDescription:
    get:
      summary: Gets the description of the specified switch device 
      description: Gets the description of the specified switch device. This is to allow a fuller description of the device to be returned, for example for a tool tip. Devices are numbered from 0 to MaxSwitch - 1
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/SwitchNumberQuery'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/StringResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Switch/{DeviceNumber}/GetSwitchName:
    get:
      summary: Gets the name of the specified switch device 
      description: Gets the name of the specified switch device. Devices are numbered from 0 to MaxSwitch - 1
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/SwitchNumberQuery'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/StringResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Switch/{DeviceNumber}/GetSwitchValue:
    get:
      summary: Gets the value of the specified switch device as a double
      description: Gets the value of the specified switch device as a double. Devices are numbered from 0 to MaxSwitch - 1, The value of this switch is expected to be between MinSwitchValue and MaxSwitchValue.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/SwitchNumberQuery'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Switch/{DeviceNumber}/MinSwitchValue:
    get:
      summary: Gets the minimum value of the specified switch device as a double
      description: Gets the minimum value of the specified switch device as a double. Devices are numbered from 0 to MaxSwitch - 1.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/SwitchNumberQuery'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Switch/{DeviceNumber}/MaxSwitchValue:
    get:
      summary: Gets the maximum value of the specified switch device as a double
      description: Gets the maximum value of the specified switch device as a double. Devices are numbered from 0 to MaxSwitch - 1.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/SwitchNumberQuery'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Switch/{DeviceNumber}/SetSwitch:
    put:
      summary: Sets a switch controller device to the specified state, true or false
      description: Sets a switch controller device to the specified state, true or false. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/SwitchNumberForm'
        - $ref: '#/parameters/SwitchStateForm'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Switch Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Switch/{DeviceNumber}/SetSwitchName:
    put:
      summary: Sets a switch device name to the specified value
      description: Sets a switch device name to the specified value.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/SwitchNumberForm'
        - $ref: '#/parameters/SwitchNameForm'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Switch Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Switch/{DeviceNumber}/SetSwitchValue:
    put:
      summary: Sets a switch device value to the specified value
      description: Sets a switch device value to the specified value.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/SwitchNumberForm'
        - $ref: '#/parameters/SwitchValueForm'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Switch Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Switch/{DeviceNumber}/SwitchStep:
    get:
      summary: Returns the step size that this device supports (the difference between successive values of the device).
      description: Returns the step size that this device supports (the difference between successive values of the device). Devices are numbered from 0 to MaxSwitch - 1.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/SwitchNumberQuery'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Switch Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
# SafetyMonitor specific Methods
  /SafetyMonitor/{DeviceNumber}/IsSafe:
    get:
      summary: Indicates whether the monitored state is safe for use. 
      description: Indicates whether the monitored state is safe for use. True if the state is safe, False if it is unsafe.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - SafetyMonitor Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
# Dome specific methods
  /Dome/{DeviceNumber}/Altitude:
    get:
      summary: The dome altitude
      description: The dome altitude (degrees, horizon zero and increasing positive to 90 zenith).    
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/AtHome:
    get:
      summary: Indicates whether the dome is in the home position.
      description: Indicates whether the dome is in the home position. This is normally used following a FindHome()  operation. The value is reset with any azimuth slew operation that moves the dome away from the home position. AtHome may also become true durng normal slew operations, if the dome passes through the home position and the dome controller hardware is capable of detecting that; or at the end of a slew operation if the dome comes to rest at the home position. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/AtPark:
    get:
      summary: Indicates whether the telescope is at the park position
      description: True if the dome is in the programmed park position. Set only following a Park() operation and reset with any slew operation. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/Azimuth:
    get:
      summary: The dome azimuth
      description: Returns the dome azimuth (degrees, North zero and increasing clockwise, i.e., 90 East, 180 South, 270 West)       
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/CanFindHome:
    get:
      summary: Indicates whether the dome can find the home position.
      description: True if the dome can move to the home position.  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Dome/{DeviceNumber}/CanPark:
    get:
      summary: Indicates whether the dome can be parked.
      description: True if the dome is capable of programmed parking (Park() method) 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/CanSetAltitude:
    get:
      summary: Indicates whether the dome altitude can be set
      description: True if driver is capable of setting the dome altitude. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/CanSetAzimuth:
    get:
      summary: Indicates whether the dome azimuth can be set
      description: True if driver is capable of setting the dome azimuth. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/CanSetPark:
    get:
      summary: Indicates whether the dome park position can be set
      description: True if driver is capable of setting the dome park position. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/CanSetShutter:
    get:
      summary: Indicates whether the dome shutter can be opened
      description: True if driver is capable of automatically operating shutter
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/CanSlave:
    get:
      summary: Indicates whether the dome supports slaving to a telescope
      description: True if driver is capable of slaving to a telescope.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/CanSyncAzimuth:
    get:
      summary: Indicates whether the dome azimuth position can be synched
      description: True if driver is capable of synchronizing the dome azimuth position using the SyncToAzimuth(Double) method. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/ShutterStatus :
    get:
      summary: Status of the dome shutter or roll-off roof
      description: Returns the status of the dome shutter or roll-off roof. 0 = Open, 1 = Closed, 2 = Opening, 3 = Closing, 4 = Shutter status error
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/Slaved:
    get:
      summary: Indicates whether the dome is slaved to the telescope
      description: True if the dome is slaved to the telescope in its hardware, else False. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets whether the dome is slaved to the telescope
      description: Sets the current subframe height.
      tags:
        - Dome Specific Methods
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: Slaved 
          description: True if telescope is slaved to dome, otherwise false 
          type: boolean
          in: formData
          required: true
          default: false
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/Slewing:
    get:
      summary: Indicates whether the any part of the dome is moving
      description: True if any part of the dome is currently moving, False if all dome components are steady.  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Dome/{DeviceNumber}/AbortSlew:
    put:
      summary: Immediately cancel current dome operation. 
      description: Calling this method will immediately disable hardware slewing (Slaved will become False).
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/CloseShutter:
    put:
      summary: Close the shutter or otherwise shield telescope from the sky.  
      description: Close the shutter or otherwise shield telescope from the sky.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/FindHome:
    put:
      summary: Start operation to search for the dome home position.
      description: After Home position is established initializes Azimuth to the default value and sets the AtHome flag.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/OpenShutter:
    put:
      summary: Open shutter or otherwise expose telescope to the sky. 
      description: Open shutter or otherwise expose telescope to the sky. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/Park:
    put:
      summary: Rotate dome in azimuth to park position.  
      description: After assuming programmed park position, sets AtPark flag. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/SetPark:
    put:
      summary: Set the current azimuth, altitude position of dome to be the park position
      description: Set the current azimuth, altitude position of dome to be the park position.  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/SlewToAltitude:
    put:
      summary: Slew the dome to the given altitude position. 
      description: Slew the dome to the given altitude position.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/DomeAltitudeForm'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/SlewToAzimuth:
    put:
      summary: Slew the dome to the given azimuth position. 
      description: Slew the dome to the given azimuth position.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/DomeAzimuthForm'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Dome/{DeviceNumber}/SyncToAzimuth:
    put:
      summary: Synchronize the current position of the dome to the given azimuth.
      description: Synchronize the current position of the dome to the given azimuth.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/DomeAzimuthForm'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Dome Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
# Camera specific methods
  /Camera/{DeviceNumber}/BayerOffsetX:
    get:
      summary: Returns the X offset of the Bayer matrix.
      description: Returns the X offset of the Bayer matrix, as defined in SensorType.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/BayerOffsetY:
    get:
      summary: Returns the Y offset of the Bayer matrix.
      description: Returns the Y offset of the Bayer matrix, as defined in SensorType.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/BinX:
    get:
      summary: Returns the binning factor for the X axis.
      description: Returns the binning factor for the X axis.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the binning factor for the X axis.
      description: Sets the binning factor for the X axis.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: BinX
          description: The X binning value
          type: integer
          format: int32
          in: formData
          required: true
          default: 1
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/BinY:
    get:
      summary: Returns the binning factor for the Y axis.
      description: Returns the binning factor for the Y axis.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the binning factor for the Y axis.
      description: Sets the binning factor for the Y axis.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: BinX
          description: The Y binning value
          type: integer
          format: int32
          in: formData
          required: true
          default: 1
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

            
  /Camera/{DeviceNumber}/CameraState :
    get:
      summary: Returns the camera operational state.
      description: Returns the current camera operational state as an integer. 0 = CameraIdle , 1 = CameraWaiting , 2 = CameraExposing , 3 = CameraReading , 4 = CameraDownload , 5 = CameraError
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/CameraXSize:
    get:
      summary: Returns the width of the CCD camera chip.
      description: Returns the width of the CCD camera chip in unbinned pixels.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/CameraYSize:
    get:
      summary: Returns the height of the CCD camera chip.
      description: Returns the height of the CCD camera chip in unbinned pixels.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/CanAbortExposure:
    get:
      summary: Indicates whether the camera can abort exposures.
      description: Returns true if the camera can abort exposures; false if not. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/CanAsymmetricBin:
    get:
      summary: Indicates whether the camera supports asymmetric binning
      description: Returns a flag showing whether this camera supports asymmetric binning  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/CanFastReadout:
    get:
      summary: Indicates whether the camera has a fast readout mode.
      description: Indicates whether the camera has a fast readout mode.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/CanGetCoolerPower:
    get:
      summary: Indicates whether the camera's cooler power setting can be read.
      description: If true, the camera's cooler power setting can be read. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/CanPulseGuide:
    get:
      summary: Returns a flag indicating whether this camera supports pulse guiding
      description: Returns a flag indicating whether this camera supports pulse guiding. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/CanSetCCDTemperature:
    get:
      summary: Returns a flag indicating whether this camera supports setting the CCD temperature 
      description: Returns a flag indicatig whether this camera supports setting the CCD temperature  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/CanStopExposure:
    get:
      summary: Returns a flag indicating whether this camera can stop an exposure that is in progress  
      description: Returns a flag indicating whether this camera can stop an exposure that is in progress   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/CCDTemperature:
    get:
      summary: Returns the current CCD temperature 
      description: Returns the current CCD temperature in degrees Celsius.    
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/CoolerOn:
    get:
      summary: Returns the current cooler on/off state.
      description: Returns the current cooler on/off state.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Turns the camera cooler on and off
      description: Turns on and off the camera cooler. True = cooler on, False = cooler off
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: CoolerOn
          description: Cooler state
          type: boolean
          in: formData
          required: true
          default: True
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/CoolerPower:
    get:
      summary: Returns the present cooler power level
      description: Returns the present cooler power level, in percent. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
            
  /Camera/{DeviceNumber}/ElectronsPerADU:
    get:
      summary: Returns the gain of the camera
      description: Returns the gain of the camera in photoelectrons per A/D unit. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/ExposureMax:
    get:
      summary: Returns the maximum exposure time supported by StartExposure.
      description: Returns the maximum exposure time supported by StartExposure.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/ExposureMin:
    get:
      summary: Returns the Minimium exposure time 
      description: Returns the Minimium exposure time in seconds that the camera supports through StartExposure.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/ExposureResolution:
    get:
      summary: Returns the smallest increment in exposure time supported by StartExposure.
      description: Returns the smallest increment in exposure time supported by StartExposure.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/FastReadout:
    get:
      summary: Returns whenther Fast Readout Mode is enabled.
      description: Returns whenther Fast Readout Mode is enabled.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets whether Fast Readout Mode is enabled.
      description: Sets whether Fast Readout Mode is enabled.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: FastReadout
          description: True to enable fast readout mode
          type: boolean
          in: formData
          required: true
          default: false
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/FullWellCapacity:
    get:
      summary: Reports the full well capacity of the camera
      description: Reports the full well capacity of the camera in electrons, at the current camera settings (binning, SetupDialog settings, etc.).
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/Gain:
    get:
      summary: Returns an index into the Gains array
      description: Returns an index into the Gains array for the selected camera gain.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the binning factor for the X axis.
      description: Sets the binning factor for the X axis.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: Gain 
          description: Index of the current camera gain in the Gains string array.
          type: integer
          format: int32
          in: formData
          required: true
          default: 0
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/GainMax:
    get:
      summary: Maximum value of Gain
      description: Returns the maximum value of Gain.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/GainMin:
    get:
      summary: Minimum value of Gain
      description: Returns the Minimum value of Gain.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/Gains:
    get:
      summary: Gains supported by the camera 
      description: Returns the Gains supported by the camera.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/StringArrayResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/HasShutter:
    get:
      summary: Indicates whether the camera has a mechanical shutter
      description: Returns a flag indicating whether this camera has a mechanical shutter.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/HeatSinkTemperature:
    get:
      summary: Returns the current heat sink temperature.
      description: Returns the current heat sink temperature (called "ambient temperature" by some manufacturers) in degrees Celsius.    
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/ImageArray:
    get:
      summary: Returns an array of int containing the exposure pixel values
      description: |
        Returns an array of int(32bit) containing the pixel values from the last exposure. This call can return either a 2 dimension (monochrome images) or 3 dimension (colour or multi-plane images) array of size NumX \* NumY  or NumX \* NumY \* NumPlanes. Where applicable, the size of NumPlanes has to be determined by inspection of the returned Array.
        
        Since 32bit integers are always returned by this call, the returned Type value (0 = Unknown, 1 = short(16bit), 2 = int(32bit), 3 = Double) is always 2. The number of planes is given in the returned Rank value.

        When deserialising to an object it helps enormously to know the array Rank beforehand so that the correct data class can be used. This can be achieved through a regular expression or by direct parsing of the returned JSON string to extract the Type and Rank values before deserialising.
        
        This regular expression accomplishes the extraction into two named groups: Type and Rank:
        
        __^*"Type":(?<Type>\d*),"Rank":(?<Rank>\d*)__
        
        which can then be used to select the correct deserialisation data class.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/ImageArrayResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/ImageArrayVariant:
    get:
      summary: Returns an array of int containing the exposure pixel values
      description: |
        Returns an array containing the pixel values from the last exposure. This call can return either a 2 dimension (monochrome images) or 3 dimension (colour or multi-plane images) array of size NumX \* NumY  or NumX \* NumY \* NumPlanes. Where applicable, the size of NumPlanes has to be determined by inspection of the returned Array.
        
        This call can return values as short(16bit) integers, int(32bit) integers or double floating point values. The nature of the returned values is given in the Type parameter: 0 = Unknown, 1 = short(16bit), 2 = int(32bit), 3 = Double. The number of planes is given in the returned Rank value.
        
        When deserialising to an object it helps enormously to know the Type and Rank beforehand so that the correct data class can be used. This can be achieved through a regular expression or by direct parsing of the returned JSON string to extract the Type and Rank values before deserialising.
        
        This regular expression accomplishes the extraction into two named groups: Type and Rank:
        
        __^*"Type":(?<Type>\d*),"Rank":(?<Rank>\d*)__
        
        which can then be used to select the correct deserialisation data class.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/ImageArrayResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/ImageReady:
    get:
      summary: Indicates that an image is ready to be downloaded
      description: Returns a flag indicating whether the image is ready to be downloaded from the camera.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/IsPulseGuiding:
    get:
      summary: Indicates that the camera is pulse guideing. 
      description: Returns a flag indicating whether the camera is currrently in a PulseGuide operation. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/LastExposureDuration:
    get:
      summary: Duration of the last exposure
      description: Reports the actual exposure duration in seconds (i.e. shutter open time).  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/LastExposureStartTime:
    get:
      summary: Start time of the last exposure in FITS standard format.
      description: Reports the actual exposure start in the FITS-standard CCYY-MM-DDThh:mm:ss[.sss...] format.   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/StringResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/MaxADU:
    get:
      summary: Camera's maximum ADU value
      description: Reports the maximum ADU value the camera can produce. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/MaxBinX:
    get:
      summary: Maximum  binning for the camera X axis
      description: Returns the maximum allowed binning for the X camera axis  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/MaxBinY:
    get:
      summary: Maximum  binning for the camera Y axis
      description: Returns the maximum allowed binning for the Y camera axis  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/NumX:
    get:
      summary: Returns the current subframe width
      description: Returns the current subframe width, if binning is active, value is in binned pixels. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the current subframe width
      description: Sets the current subframe width.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: NumX 
          description: Sets the subframe width, if binning is active, value is in binned pixels. 
          type: integer
          format: int32
          in: formData
          required: true
          default: 0
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/NumY:
    get:
      summary: Returns the current subframe height
      description: Returns the current subframe height, if binning is active, value is in binned pixels. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the current subframe height
      description: Sets the current subframe height.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: NumX 
          description: Sets the subframe height, if binning is active, value is in binned pixels. 
          type: integer
          format: int32
          in: formData
          required: true
          default: 0
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/PercentCompleted:
    get:
      summary: Indicates percentage completeness of the current operation
      description: Returns the percentage of the current operation that is complete. If valid, returns an integer between 0 and 100, where 0 indicates 0% progress (function just started) and 100 indicates 100% progress (i.e. completion).
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/PixelSizeX:
    get:
      summary: Width of CCD chip pixels (microns)
      description: Returns the width of the CCD chip pixels in microns. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/PixelSizeY:
    get:
      summary: Height of CCD chip pixels (microns)
      description: Returns the Height of the CCD chip pixels in microns. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/ReadoutMode:
    get:
      summary: Indicates the canera's readout mode as an index into the array ReadoutModes
      description: ReadoutMode is an index into the array ReadoutModes and returns the desired readout mode for the camera. Defaults to 0 if not set.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Set the camera's readout mode
      description: Sets the ReadoutMode as an index into the array ReadoutModes.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: ReadoutMode 
          description: Index into the ReadoutModes array of string readout mode names indicating the camera's current readout mode.
          type: integer
          format: int32
          in: formData
          required: true
          default: 0
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/ReadoutModes:
    get:
      summary: List of available readout modes
      description: This property provides an array of strings, each of which describes an available readout mode of the camera. At least one string must be present in the list. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/StringArrayResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/SensorName:
    get:
      summary: Sensor name
      description: The name of the sensor used within the camera.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/StringResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/SensorType:
    get:
      summary: Type of information returned by the the camera sensor (monochrome or colour)
      description: |
        Returns a value indicating whether the sensor is monochrome, or what Bayer matrix it encodes. Where: 
        - 0 = Monochrome,
        - 1 = Colour not requiring Bayer decoding
        - 2 = RGGB Bayer encoding
        - 3 = CMYG Bayer encoding
        - 4 = CMYG2 Bayer encoding
        - 5 = LRGB TRUESENSE Bayer encoding.
        
        Please see the ASCOM Help fie for more informaiton on the SensorType.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/SetCCDTemperature:
    get:
      summary: Returns the current camera cooler setpoint in degrees Celsius.
      description: Returns the current camera cooler setpoint in degrees Celsius.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Set the camera's cooler setpoint (degrees Celsius).
      description: Set's the camera's cooler setpoint in degrees Celsius.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: SetCCDTemperature 
          description: Temperature set point (degrees Celsius).
          type: number
          in: formData
          required: true
          default: -10.0
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/StartX:
    get:
      summary: Return the current subframe X axis start position
      description: Sets the subframe start position for the X axis (0 based) and returns the current value. If binning is active, value is in binned pixels.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the current subframe X axis start position
      description: Sets the current subframe X axis start position in binned pixels.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: StartX 
          description: The subframe X axis start position in binned pixels.
          type: integer
          format: int32
          in: formData
          required: true
          default: 0
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/StartY:
    get:
      summary: Return the current subframe Y axis start position
      description: Sets the subframe start position for the Y axis (0 based) and returns the current value. If binning is active, value is in binned pixels.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the current subframe Y axis start position
      description: Sets the current subframe Y axis start position in binned pixels.
      tags:
        - Camera Specific Methods
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: StartY 
          description: The subframe Y axis start position in binned pixels.
          type: integer
          format: int32
          in: formData
          required: true
          default: 0
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/AbortExposure:
    put:
      summary: Aborts the current exposure
      description: Aborts the current exposure, if any, and returns the camera to Idle state.   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/PulseGuide:
    put:
      summary: Pulse guide in the specified direction for the specified time.
      description: Activates the Camera's mount control sytem to instruct the mount to move in a particular direction for a given period of time    
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/DirectionForm'
        - $ref: '#/parameters/PulseDurationForm'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/StartExposure:
    put:
      summary: Starts an exposure
      description: Starts an exposure. Use ImageReady to check when the exposure is complete.    
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ExposureDurationForm'
        - $ref: '#/parameters/ExposureLightForm'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Camera/{DeviceNumber}/StopExposure:
    put:
      summary: Stops the current exposure
      description: Stops the current exposure, if any. If an exposure is in progress, the readout process is initiated. Ignored if readout is already in process.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Camera Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
# ObservingConditions specific methods
  /ObservingConditions/{DeviceNumber}/AveragePeriod:
    get:
      summary: Returns the time period over which observations will be averaged
      description: Gets the time period over which observations will be averaged 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description:  Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the time period over which observations will be averaged
      description: Sets the time period over which observations will be averaged  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: AveragePeriod 
          description: Time period (hours) over which to average sensor readings
          type: number
          in: formData
          required: true
          default: 0.15
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /ObservingConditions/{DeviceNumber}/CloudCover:
    get:
      summary: Returns the amount of sky obscured by cloud 
      description: Gets the percentage of the sky obscured by cloud 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description:  Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /ObservingConditions/{DeviceNumber}/DewPoint:
    get:
      summary: Returns the atmospheric dew point at the observatory  
      description: Gets the atmospheric dew point at the observatory reported in °C.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description:  Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'



  /ObservingConditions/{DeviceNumber}/Humidity:
    get:
      summary: Returns the atmospheric humidity at the observatory   
      description: Gets the atmospheric  humidity (%) at the observatory 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description:  Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /ObservingConditions/{DeviceNumber}/Pressure:
    get:
      summary: Returns the atmospheric pressure at the observatory.
      description: Gets the atmospheric pressure in hectoPascals at the observatory's altitude - NOT reduced to sea level.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description:  Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /ObservingConditions/{DeviceNumber}/RainRate:
    get:
      summary: Returns the rain rate at the observatory.
      description: Gets the rain rate (mm/hour) at the observatory.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description:  Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /ObservingConditions/{DeviceNumber}/SkyBrightness:
    get:
      summary: Returns the sky brightness at the observatory
      description: Gets the sky brightness at the observatory (Lux)
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description:  Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /ObservingConditions/{DeviceNumber}/SkyQuality:
    get:
      summary: Returns the sky quality at the observatory
      description: Gets the sky quality at the observatory (magnitudes per square arc second)
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description:  Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /ObservingConditions/{DeviceNumber}/SkyTemperature:
    get:
      summary: Returns the sky temperature at the observatory
      description: Gets the sky temperature(°C) at the observatory.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description:  Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /ObservingConditions/{DeviceNumber}/StarFWHM:
    get:
      summary: Returns the seeing at the observatory  
      description: Gets the seeing at the observatory measured as star full width half maximum (FWHM) in arc secs. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description:  Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /ObservingConditions/{DeviceNumber}/Temperature:
    get:
      summary: Returns the temperature at the observatory  
      description: Gets the temperature(°C) at the observatory.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description:  Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /ObservingConditions/{DeviceNumber}/WindDirection:
    get:
      summary: Returns the wind direction at the observatory
      description: Gets the wind direction. The returned value must be between 0.0 and 360.0, interpreted according to the metereological standard, where a special value of 0.0 is returned when the wind speed is 0.0. Wind direction is measured clockwise from north, through east, where East=90.0, South=180.0, West=270.0 and North=360.0. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description:  Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /ObservingConditions/{DeviceNumber}/WindGust:
    get:
      summary: Returns the peak 3 second wind gust at the observatory over the last 2 minutes  
      description: Gets the peak 3 second wind gust(m/s) at the observatory over the last 2 minutes.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description:  Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /ObservingConditions/{DeviceNumber}/WindSpeed:
    get:
      summary: Returns the wind speed at the observatory.
      description: Gets the wind speed(m/s) at the observatory.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description:  Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /ObservingConditions/{DeviceNumber}/Refresh:
    put:
      summary: Refreshes sensor values from hardware.
      description: Forces the driver to immediately query its attached hardware to refresh sensor values.  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /ObservingConditions/{DeviceNumber}/SensorDescription:
    get:
      summary: Return a sensor description  
      description: Gets a description of the sensor with the name specified in the PropertyName parameter 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: SensorName
          description: Name of the sensor whose description is required
          type: string
          in: query
          required: true
          default: Pressure
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/StringResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /ObservingConditions/{DeviceNumber}/TimeSinceLastUpdate:
    get:
      summary: Return the time since the sensor value was last updated   
      description: Gets the time since the sensor specified in the TimeSinceLastUpdate parameter was last updated
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: SensorName
          description: Name of the sensor whose description is required
          type: string
          in: query
          required: true
          default: Pressure
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - ObservingConditions Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/StringResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
# FilterWheel specific methods
  /FilterWheel/{DeviceNumber}/FocusOffsets:
    get:
      summary: Filter focus offsets
      description: An integer array of filter focus offsets.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - FilterWheel Specific Methods
      responses:
        200:
          description:  Driver response
          schema:
            $ref: '#/definitions/IntArrayResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /FilterWheel/{DeviceNumber}/Names:
    get:
      summary: Filter wheel filter names
      description: The names of the filters
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - FilterWheel Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/StringArrayResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /FilterWheel/{DeviceNumber}/Position:
    get:
      summary: Returns the current filter wheel position
      description: Returns the current filter wheel position
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - FilterWheel Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the filter wheel position
      description: Sets the filter wheel position
      tags:
        - FilterWheel Specific Methods
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: Position
          description: The number of the filter wheel position to select
          type: integer
          format: int32
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

# Focuser specific methods
  /Focuser/{DeviceNumber}/Absolute:
    get:
      summary: Indicates whether the focuser is capable of absolute position.
      description: True if the focuser is capable of absolute position; that is, being commanded to a specific step location. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Focuser/{DeviceNumber}/IsMoving:
    get:
      summary: Indicates whether the focuser is currently moving.
      description: True if the focuser is currently moving to a new position. False if the focuser is stationary.  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Focuser/{DeviceNumber}/MaxIncrement:
    get:
      summary: Returns the focuser's maximum increment size.
      description: Maximum increment size allowed by the focuser; i.e. the maximum number of steps allowed in one move operation.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Focuser/{DeviceNumber}/MaxStep:
    get:
      summary: Returns the focuser's maximum step size.
      description: Maximum step position permitted. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Focuser/{DeviceNumber}/Position:
    get:
      summary: Returns the focuser's current position.
      description: Current focuser position, in steps.  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Focuser/{DeviceNumber}/StepSize:
    get:
      summary: Returns the focuser's step size.
      description: Step size (microns) for the focuser.   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Focuser/{DeviceNumber}/TempComp:
    get:
      summary: Retrieves the state of temperature compensation mode
      description: Gets the state of temperature compensation mode (if available), else always False. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the device's temperature compensation mode.
      description: Sets the state of temperature compensation mode. 
      tags:
        - Focuser Specific Methods
      parameters:
        - name: DeviceNumber
          description: Zero based device number as set on the server
          type: integer
          format: int32
          in: path
          required: true
        - name: TempComp
          description: Set true to enable the focuser's temperature compensation mode, otherwise false for normal operation.
          type: boolean      
          in: formData
          required: true
        - name: Client
          description: Client's unique ID.
          type: integer
          format: int32
          in: formData
          required: false
        - name: ClientTransactionIDForm
          description: Client's transaction ID.
          type: integer
          format: int32
          in: formData
          required: false
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Focuser/{DeviceNumber}/TempCompAvailable:
    get:
      summary: Indicates whether the focuser has temperature compensation.
      description: True if focuser has temperature compensation available.   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Focuser/{DeviceNumber}/Temperature:
    get:
      summary: Returns the focuser's current temperature.
      description: Current ambient temperature as measured by the focuser.    
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Focuser Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Focuser/{DeviceNumber}/Halt:
    put:
      summary: Immediatley stops focuser motion.
      description: Immediately stop any focuser motion due to a previous Move(Int32) method call. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Focuser Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Focuser/{DeviceNumber}/Move:
    put:
      summary: Moves the focuser to a new position.
      description: Moves the focuser by the specified amount or to the specified position depending on the value of the Absolute property. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: Position
          description: Step distance or absolute position, depending on the value of the Absolute property
          type: integer
          format: int32
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Focuser Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

# Rotator specific methods
  /Rotator/{DeviceNumber}/CanReverse :
    get:
      summary: IIndicates whether the Rotator supports the Reverse method. 
      description: True if the Rotator supports the Reverse method.   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Rotator Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Rotator/{DeviceNumber}/IsMoving:
    get:
      summary: Indicates whether the rotator is currently moving.
      description: True if the rotator is currently moving to a new position. False if the focuser is stationary.  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Rotator Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Rotator/{DeviceNumber}/Position:
    get:
      summary: Returns the rotator's current position.
      description: Current instantaneous Rotator position, in degrees.   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Rotator Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Rotator/{DeviceNumber}/Reverse :
    get:
      summary: Returns the rotator’s Reverse state. 
      description: Returns the rotator’s Reverse state. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Rotator Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the rotator’s Reverse state. 
      description: Sets the rotator’s Reverse state.
      tags:
        - Rotator Specific Methods
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: Reverse
          description: True if the rotation and angular direction must be reversed to match the optical characteristcs
          type: boolean      
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Rotator/{DeviceNumber}/StepSize:
    get:
      summary: Returns the minimum StepSize 
      description: The minimum StepSize, in degrees.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Rotator Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Rotator/{DeviceNumber}/TargetPosition:
    get:
      summary: Returns the destination position angle.  
      description: The destination position angle for Move() and MoveAbsolute(). 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Rotator Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Rotator/{DeviceNumber}/Halt:
    put:
      summary: Immediatley stops rotator motion.
      description: Immediately stop any Rotator motion due to a previous Move or MoveAbsolute method call. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Rotator Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Rotator/{DeviceNumber}/Move:
    put:
      summary: Moves the rotator to a new relative position.
      description: Causes the rotator to move Position degrees relative to the current Position value. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: Position
          description: Relative position to move in degrees from current Position.
          type: number
          format: double
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Rotator Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Rotator/{DeviceNumber}/MoveAbsolute:
    put:
      summary: Moves the rotator to a new absolute position.
      description: Causes the rotator to move the absolute position of Position degrees. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: Position
          description: Absolute position in degrees.
          type: number
          format: double
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Rotator Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
# Telescope specific methods
  /Telescope/{DeviceNumber}/AlignmentMode:
    get:
      summary: Returns the current mount alignment mode
      description: Returns the alignment mode of the mount (Alt/Az, Polar, German Polar).  The alignment mode is specified as an integer value from the AlignmentModes Enum.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/Altitude:
    get:
      summary: Returns the mount's Altitude above the horizon.
      description: The Altitude above the local horizon of the telescope's current position (degrees, positive up)    
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/ApertureArea:
    get:
      summary: Returns the telescope's aperture.
      description: The area of the telescope's aperture, taking into account any obstructions (square meters)     
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/ApertureDiameter:
    get:
      summary: Returns the telescope's effective aperture.
      description: The telescope's effective aperture diameter (meters)      
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/AtHome:
    get:
      summary: Indicates whether the mount is at the home position.
      description: True if the mount is stopped in the Home position. Set only following a FindHome()  operation, and reset with any slew operation. This property must be False if the telescope does not support homing. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/AtPark:
    get:
      summary: Indicates whether the telescope is at the park position.
      description: True if the telescope has been put into the parked state by the seee Park()  method. Set False by calling the Unpark() method.  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/Azimuth:
    get:
      summary: Returns the telescope's aperture.
      description: The azimuth at the local horizon of the telescope's current position (degrees, North-referenced, positive East/clockwise).      
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/CanFindHome:
    get:
      summary: Indicates whether the mount can find the home position.
      description: True if this telescope is capable of programmed finding its home position (FindHome()  method). 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/CanPark:
    get:
      summary: Indicates whether the telescope can be parked.
      description: True if this telescope is capable of programmed parking (Park() method) 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/CanPulseGuide:
    get:
      summary: Indicates whether the telescope can be pulse guided.
      description: True if this telescope is capable of software-pulsed guiding (via the PulseGuide(GuideDirections, Int32) method)  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/CanSetDeclinationRate:
    get:
      summary: Indicates whether the DeclinationRate property can be changed.
      description: True if the DeclinationRate property can be changed to provide offset tracking in the declination axis.   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/CanSetGuideRates:
    get:
      summary: Indicates whether the DeclinationRate property can be changed.
      description: True if the guide rate properties used for PulseGuide(GuideDirections, Int32) can ba adjusted. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/CanSetPark:
    get:
      summary: Indicates whether the telescope park position can be set.
      description: True if this telescope is capable of programmed setting of its park position (SetPark() method)  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/CanSetPierSide:
    get:
      summary: Indicates whether the telescope SideOfPier can be set.
      description: True if the SideOfPier property can be set, meaning that the mount can be forced to flip.   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/CanSetRightAscensionRate:
    get:
      summary: Indicates whether the RightAscensionRate property can be changed.
      description: True if the RightAscensionRate property can be changed to provide offset tracking in the right ascension axis. .   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/CanSetTracking:
    get:
      summary: Indicates whether the Tracking property can be changed.
      description: True if the Tracking property can be changed, turning telescope sidereal tracking on and off.   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/CanSlew:
    get:
      summary: Indicates whether the telescope can slew synchronously.
      description: True if this telescope is capable of programmed slewing (synchronous or asynchronous) to equatorial coordinates 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/CanSlewAltAz:
    get:
      summary: Indicates whether the telescope can slew synchronously to AltAz coordinates.
      description: True if this telescope is capable of programmed slewing (synchronous or asynchronous) to local horizontal coordinates  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/CanSlewAltAzAsync:
    get:
      summary: Indicates whether the telescope can slew asynchronously to AltAz coordinates.
      description: True if this telescope is capable of programmed asynchronous slewing to local horizontal coordinates  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/CanSlewAsync:
    get:
      summary: Indicates whether the telescope can slew asynchronously.
      description: True if this telescope is capable of programmed asynchronous slewing to equatorial coordinates. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/CanSync:
    get:
      summary: Indicates whether the telescope can sync to equatorial coordinates.
      description: True if this telescope is capable of programmed synching to equatorial coordinates.  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/CanSyncAltAz:
    get:
      summary: Indicates whether the telescope can sync to local horizontal coordinates.
      description: True if this telescope is capable of programmed synching to local horizontal coordinates   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/Declination:
    get:
      summary: Returns the telescope's declination.
      description: The declination (degrees) of the telescope's current equatorial coordinates, in the coordinate system given by the EquatorialSystem property. Reading the property will raise an error if the value is unavailable.       
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/DeclinationRate:
    get:
      summary: Returns the telescope's declination tracking rate.
      description: The declination tracking rate (arcseconds per second, default = 0.0)        
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the telescope's declination tracking rate.
      description: Sets the declination tracking rate (arcseconds per second)  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: DeclinationRate
          description: Declination tracking rate (arcseconds per second)
          type: number
          format: double
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/DoesRefraction:
    get:
      summary: Indicates whether atmospheric refraction is applied to coordinates.
      description: True if the telescope or driver applies atmospheric refraction to coordinates.   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Determines whether atmospheric refraction is applied to coordinates.
      description: Causes the rotator to move Position degrees relative to the current Position value. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: DoesRefraction
          description: Set True to make the telescope or driver applie atmospheric refraction to coordinates. 
          type: boolean
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/EquatorialSystem:
    get:
      summary: Returns the current equatorial coordinate system used by this telescope. 
      description: Returns the current equatorial coordinate system used by this telescope (e.g. Topocentric or J2000). 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/FocalLength:
    get:
      summary: Returns the telescope's focal length in meters.
      description: The telescope's focal length in meters     
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/GuideRateDeclination:
    get:
      summary: Returns the  current Declination rate offset for telescope guiding
      description: The current Declination movement rate offset for telescope guiding (degrees/sec)     
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the  current Declination rate offset for telescope guiding.
      description: Sets the current Declination movement rate offset for telescope guiding (degrees/sec).
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: GuideRateDeclination 
          description: Declination movement rate offset degrees/sec).
          type: number
          format: double
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/GuideRateRightAscension :
    get:
      summary: Returns the  current RightAscension rate offset for telescope guiding
      description: The current RightAscension movement rate offset for telescope guiding (degrees/sec)     
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the  current RightAscension rate offset for telescope guiding.
      description: Sets the current RightAscension movement rate offset for telescope guiding (degrees/sec).
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: GuideRateRightAscension  
          description: RightAscension movement rate offset degrees/sec).
          type: number
          format: double
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/IsPulseGuiding:
    get:
      summary: Indicates whether the telescope is currently executing a PulseGuide command
      description: True if a PulseGuide(GuideDirections, Int32) command is in progress, False otherwise 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/RightAscension:
    get:
      summary: Returns the telescope's right ascension coordinate.
      description: The right ascension (hours) of the telescope's current equatorial coordinates, in the coordinate system given by the EquatorialSystem property 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/RightAscensionRate:
    get:
      summary: Returns the telescope's right ascension tracking rate.
      description: The right ascension tracking rate (arcseconds per second, default = 0.0)        
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the telescope's right ascension tracking rate.
      description: Sets the right ascension tracking rate (arcseconds per second)  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: RightAscensionRate 
          description: Right ascension tracking rate (arcseconds per second)
          type: number
          format: double
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/SideOfPier:
    get:
      summary: Returns the mount's pointing state. 
      description: Indicates the pointing state of the mount. 0 = pierEast, 1 = pierWest, -1= pierUnknown
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the mount's pointing state.
      description: Sets the pointing state of the mount. 0 = pierEast, 1 = pierWest
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: SideOfPier 
          description: New pointing state.
          type: integer
          format: int32
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/SiderealTime:
    get:
      summary: Returns the local apparent sidereal time.
      description: The local apparent sidereal time from the telescope's internal clock (hours, sidereal).   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/SiteElevation:
    get:
      summary: Returns the observing site's elevation above mean sea level.
      description: The elevation above mean sea level (meters) of the site at which the telescope is located.   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the observing site's elevation above mean sea level.
      description: Sets the elevation above mean sea level (metres) of the site at which the telescope is located.  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: SiteElevation
          description: Elevation above mean sea level (metres).
          type: number
          format: double
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/SiteLatitude:
    get:
      summary: Returns the observing site's latitude.
      description: The geodetic(map) latitude (degrees, positive North, WGS84) of the site at which the telescope is located.   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the observing site's latitude.
      description: Sets the observing site's latitude (degrees). 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: SiteLatitude
          description: Site latitude (degrees)
          type: number
          format: double
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/SiteLongitude:
    get:
      summary: Returns the observing site's longitude.
      description: The longitude (degrees, positive East, WGS84) of the site at which the telescope is located.    
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the observing site's longitude.
      description: Sets the observing site's longitude (degrees, positive East, WGS84). 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: SiteLongitude
          description: Site longitude (degrees, positive East, WGS84)
          type: number
          format: double
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/Slewing:
    get:
      summary: Indicates whether the telescope is currently slewing.
      description: True if telescope is currently moving in response to one of the Slew methods or the MoveAxis(TelescopeAxes, Double) method, False at all other times.  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/SlewSettleTime:
    get:
      summary: Returns the post-slew settling time. 
      description: Returns the post-slew settling time (sec.). 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the post-slew settling time. 
      description: Sets the  post-slew settling time (integer sec.).
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: SlewSettleTime
          description: Settling time (integer sec.).
          type: integer
          format: int32
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/TargetDeclination:
    get:
      summary: Returns the current target declination.
      description: The declination (degrees, positive North) for the target of an equatorial slew or sync operation    
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the target declination of a slew or sync.
      description: Sets the declination (degrees, positive North) for the target of an equatorial slew or sync operation
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: TargetDeclination 
          description: Target declination(degrees)
          type: number
          format: double
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/TargetRightAscension:
    get:
      summary: Returns the current target right ascension.
      description: The right ascension (hours) for the target of an equatorial slew or sync operation    
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/DoubleResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the target right ascension of a slew or sync.
      description: Sets the right ascension (hours) for the target of an equatorial slew or sync operation
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: TargetRightAscension 
          description: Target right ascension(hours)
          type: number
          format: double
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/Tracking:
    get:
      summary: Indicates whether the telescope is tracking.
      description: Returns the state of the telescope's sidereal tracking drive.  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Enables or disables telescope tracking.
      description: Sets the state of the telescope's sidereal tracking drive. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: Tracking 
          description: Tracking enabled / disabled
          type: boolean
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/TrackingRate:
    get:
      summary: Returns the current tracking rate. 
      description: The current tracking rate of the telescope's sidereal drive.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the mount's tracking rate.
      description: Sets the tracking rate of the telescope's sidereal drive. 0 = driveSidereal, 1 = driveLunar, 2 = driveSolar, 3 = driveKing
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: TrackingRate 
          description: New tracking rate
          type: integer
          format: int32
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

  /Telescope/{DeviceNumber}/TrackingRates:
    get:
      summary: Returns an array of supported DriveRates values. 
      description: Returns an array of supported DriveRates values that describe the permissible values of the TrackingRate property for this telescope type. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description:  Driver response
          schema:
            $ref: '#/definitions/IntArrayResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'


  /Telescope/{DeviceNumber}/UTCDate:
    get:
      summary: Returns the UTC date/time of the telescope's internal clock.
      description: The UTC date/time of the telescope's internal clock in ISO 8601 format including fractional seconds. The general format (in Microsoft custom date format style) is yyyy-MM-ddTHH:mm:ss.fffffffZ E.g. 2016-03-04T17:45:31.1234567Z or 2016-11-14T07:03:08.1234567Z Please note the compulsary trailing Z indicating the 'Zulu', UTC time zone.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/StringResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
    put:
      summary: Sets the UTC date/time of the telescope's internal clock.
      description: The UTC date/time of the telescope's internal clock in ISO 8601 format including fractional seconds. The general format (in Microsoft custom date format style) is yyyy-MM-ddTHH:mm:ss.fffffffZ E.g. 2016-03-04T17:45:31.1234567Z or 2016-11-14T07:03:08.1234567Z Please note the compulsary trailing Z indicating the 'Zulu', UTC time zone. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: UTCDate
          description: UTC date/time in ISO 8601 format.
          type: string
          in: formData
          required: true
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/AbortSlew:
    put:
      summary: Immediatley stops a slew in progress. 
      description: Immediately Stops a slew in progress. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/AxisRates:
    get:
      summary: Returns the rates at which the telescope may be moved about the specified axis. 
      description: The rates at which the telescope may be moved about the specified axis by the MoveAxis(TelescopeAxes, Double) method. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: Axis
          description: The axis about which rate information is desired. 0 = axisPrimary, 1 = axisSecondary, 2 = axisTertiary.
          type: integer
          format: int32
          in: formData
          required: true
          default: 0
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/AxisRatesResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/CanMoveAxis:
    get:
      summary: Indicates whether the telescope can move the requested axis. 
      description: True if this telescope can move the requested axis. 
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/AxisQuery'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/BoolResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/DestinationSideOfPier:
    get:
      summary: Predicts the pointing state after a German equatorial mount slews to given coordinates.
      description: Predicts the pointing state that a German equatorial mount will be in if it slews to the given coordinates. The  return value will be one of - 0 = pierEast, 1 = pierWest, -1 = pierUnknown
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/RightAscensionQuery'
        - $ref: '#/parameters/DeclinationQuery'
        - $ref: '#/parameters/ClientIDQuery'
        - $ref: '#/parameters/ClientTransactionIDQuery'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Driver response
          schema:
            $ref: '#/definitions/IntResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/FindHome:
    put:
      summary: Moves the mount to the "home" position. 
      description: Locates the telescope's "home" position (synchronous)  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/MoveAxis:
    put:
      summary: Moves a telescope axis at the given rate.  
      description: Move the telescope in one axis at the given rate.   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/AxisQuery'
        - name: Rate
          description: The rate of motion (deg/sec) about the specified axis
          type: number
          in: formData
          required: true
          default: 0.0
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/Park:
    put:
      summary: Park the mount 
      description: Move the telescope to its park position, stop all motion (or restrict to a small safe range), and set AtPark to True. )  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/PulseGuide:
    put:
      summary: Moves the scope in the given direction for the given time. 
      description: Moves the scope in the given direction for the given interval or time at the rate given by the corresponding guide rate property  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - name: Direction
          description: The direction in which the guide-rate motion is to be made. 0 = guideNorth, 1 = guideSouth, 2 = guideEast, 3 = guideWest
          type: integer
          format: int32
          in: formData
          required: true
          default: 0
        - name: Duration
          description: The duration of the guide-rate motion (milliseconds)
          type: integer
          format: int32
          in: formData
          required: true
          default: 5
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/SetPark :
    put:
      summary: Sets the telescope's park position
      description: Sets the telescope's park position to be its current position.   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/SlewToAltAz:
    put:
      summary: Synchronously slew to the given local horizontal coordinates. 
      description: Move the telescope to the given local horizontal coordinates, return when slew is complete   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/AzimuthForm'
        - $ref: '#/parameters/AltitudeForm'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/SlewToAltAzAsync:
    put:
      summary: Asynchronously slew to the given local horizontal coordinates. 
      description: Move the telescope to the given local horizontal coordinates, return immediatley after the slew starts. The client can poll the Slewing method to determine when the mount reaches the intended coordinates.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/AzimuthForm'
        - $ref: '#/parameters/AltitudeForm'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/SlewToCoordinates:
    put:
      summary: Synchronously slew to the given equatorial coordinates. 
      description: Move the telescope to the given equatorial coordinates, return when slew is complete   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/RightAscensionForm'
        - $ref: '#/parameters/DeclinationForm'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/SlewToCoordinatesAsync:
    put:
      summary: Asynchronously slew to the given equatorial coordinates. 
      description: Move the telescope to the given equatorial coordinates, return immediatley after the slew starts. The client can poll the Slewing method to determine when the mount reaches the intended coordinates.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/RightAscensionForm'
        - $ref: '#/parameters/DeclinationForm'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/SlewToTarget:
    put:
      summary: Synchronously slew to the TargetRightAscension and TargetDeclination coordinates.
      description: Move the telescope to the TargetRightAscension and TargetDeclination equatorial coordinates, return when slew is complete   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/SlewToTargetAsync:
    put:
      summary: Asynchronously slew to the TargetRightAscension and TargetDeclination coordinates.
      description: Move the telescope to the TargetRightAscension and TargetDeclination equatorial coordinates, return immediatley after the slew starts. The client can poll the Slewing method to determine when the mount reaches the intended coordinates.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/SyncToAltAz:
    put:
      summary: Syncs to the given local horizontal coordinates. 
      description: Matches the scope's local horizontal coordinates to the given local horizontal coordinates.    
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/AzimuthForm'
        - $ref: '#/parameters/AltitudeForm'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/SyncToCoordinates:
    put:
      summary: Syncs to the given equatorial coordinates. 
      description: Matches the scope's equatorial coordinates to the given equatorial coordinates.   
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/RightAscensionForm'
        - $ref: '#/parameters/DeclinationForm'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/SyncToTarget:
    put:
      summary: Syncs to the TargetRightAscension and TargetDeclination coordinates.
      description: Matches the scope's equatorial coordinates to the TargetRightAscension and TargetDeclination equatorial coordinates.
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
  /Telescope/{DeviceNumber}/UnPark:
    put:
      summary: Unparks the mount.
      description: Takes telescope out of the Parked state. )  
      parameters:
        - $ref: '#/parameters/DeviceNumber'
        - $ref: '#/parameters/ClientIDForm'
        - $ref: '#/parameters/ClientTransactionIDForm'
      tags:
        - Telescope Specific Methods
      responses:
        200:
          description: Transaction complete or exception
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Method or parameter value error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: Server internal error, check error message
          schema:
            $ref: '#/definitions/ErrorMessage'

# Definitions          
definitions:
  ImageArrayResponse:
    type: object
    properties:
      ArrayType:
        type: integer
        format: int32
        description: 0 = Unknown, 1 = Short(Int16), 2 = Int (Int32), 3 = Double (Double precision real number).
        minimum: 0
        maximum: 3
      Rank:
        type: integer
        format: int32
        description: The array's rank, will be 2 (single plane image (monochrome))or 3 (multi-plane image).
      Value:
        type: array
        items:
          type: array
          items:
            type: number
            description: Returned integer value
      ClientTransactionIDForm:
        type: integer
        format: int32
        description: Client's transaction ID.
      ServerTransactionID:
        type: integer
        format: int32
        description: Server's transaction ID.
      Method:
        type: string
        description: Name of the calling method.
      ErrorNumber:
        type: integer
        format: int32
        description: Error number from device.
      ErrorMessage:
        type: string
        description: Error message description from device.
      DriverException:
        type: object
        description: Windows error exception object (only of value if client is Windows in which case deserialise to a .NET Exception object).
  ErrorMessage:
    type: string
    properties:
      Value:
        type: string
        description: Error message
  BoolResponse:
    type: object
    properties:
      Value:
        type: boolean
        description: True or False value
      ClientTransactionIDForm:
        type: integer
        format: int32
        description: Client's transaction ID.
      ServerTransactionID:
        type: integer
        format: int32
        description: Server's transaction ID.
      Method:
        type: string
        description: Name of the calling method.
      ErrorNumber:
        type: integer
        format: int32
        description: Error number from device.
      ErrorMessage:
        type: string
        description: Error message description from device.
      DriverException:
        type: object
        description: Windows error exception object (only of value if client is Windows in which case deserialise to a .NET Exception object).
  DoubleResponse:
    type: object
    properties:
      Value:
        type: number
        format: double
        description: Returned double value
      ClientTransactionIDForm:
        type: integer
        format: int32
        description: Client's transaction ID.
      ServerTransactionID:
        type: integer
        format: int32
        description: Server's transaction ID.
      Method:
        type: string
        description: Name of the calling method.
      ErrorNumber:
        type: integer
        format: int32
        description: Error number from device.
      ErrorMessage:
        type: string
        description: Error message description from device.
      DriverException:
        type: object
        description: Windows error exception object (only of value if client is Windows in which case deserialise to a .NET Exception object).

  IntResponse:
    type: object
    properties:
      Value:
        type: integer
        format: int32
        description: Returned integer value
      ClientTransactionIDForm:
        type: integer
        format: int32
        description: Client's transaction ID.
      ServerTransactionID:
        type: integer
        format: int32
        description: Server's transaction ID.
      Method:
        type: string
        description: Name of the calling method.
      ErrorNumber:
        type: integer
        format: int32
        description: Error number from device.
      ErrorMessage:
        type: string
        description: Error message description from device.
      DriverException:
        type: object
        description: Windows error exception object (only of value if client is Windows in which case deserialise to a .NET Exception object).
  IntArrayResponse:
    type: object
    properties:
      Value:
        type: array
        items:
          type: integer
          format: int32
        description: Array of integer values.
      ClientTransactionIDForm:
        type: integer
        format: int32
        description: Client's transaction ID.
      ServerTransactionID:
        type: integer
        format: int32
        description: Server's transaction ID.
      Method:
        type: string
        description: Name of the calling method.
      ErrorNumber:
        type: integer
        format: int32
        description: Error number from device.
      ErrorMessage:
        type: string
        description: Error message description from device.
      DriverException:
        type: object
        description: Windows error exception object (only of value if client is Windows in which case deserialise to a .NET Exception object).
  MethodResponse:
    type: object
    properties:
      ClientTransactionIDForm:
        type: integer
        format: int32
        description: Client's transaction ID.
      ServerTransactionID:
        type: integer
        format: int32
        description: Server's transaction ID.
      Method:
        type: string
        description: Name of the calling method.
      ErrorNumber:
        type: integer
        format: int32
        description: Error number from device.
      ErrorMessage:
        type: string
        description: Error message description from device.
      DriverException:
        type: object
        description: Windows error exception object (only of value if client is Windows in which case deserialise to a .NET Exception object).
  StringResponse:
    type: object
    properties:
      Value:
        type: string
        description: String response from the device.
      ClientTransactionIDForm:
        type: integer
        format: int32
        description: Client's transaction ID.
      ServerTransactionID:
        type: integer
        format: int32
        description: Server's transaction ID.
      Method:
        type: string
        description: Name of the calling method.
      ErrorNumber:
        type: integer
        format: int32
        description: Error number from device.
      ErrorMessage:
        type: string
        description: Error message description from device.
      DriverException:
        type: object
        description: Windows error exception object (only of value if client is Windows in which case deserialise to a .NET Exception object).
  StringArrayResponse:
    type: object
    properties:
      Value:
        type: array
        items:
          type: string
        description: Array of string values.
      ClientTransactionIDForm:
        type: integer
        format: int32
        description: Client's transaction ID.
      ServerTransactionID:
        type: integer
        format: int32
        description: Server's transaction ID.
      Method:
        type: string
        description: Name of the calling method.
      ErrorNumber:
        type: integer
        format: int32
        description: Error number from device.
      ErrorMessage:
        type: string
        description: Error message description from device.
      DriverException:
        type: object
        description: Windows error exception object (only of value if client is Windows in which case deserialise to a .NET Exception object).
  AxisRatesResponse:
    type: object
    properties:
      Value:
        description: Array of rate objects
        type: array
        items:
          $ref: '#/definitions/AxisRate'
      ClientTransactionIDForm:
        type: integer
        format: int32
        description: Client's transaction ID.
      ServerTransactionID:
        type: integer
        format: int32
        description: Server's transaction ID.
      Method:
        type: string
        description: Name of the calling method.
      ErrorNumber:
        type: integer
        format: int32
        description: Error number from device.
      ErrorMessage:
        type: string
        description: Error message description from device.
      DriverException:
        type: object
        description: Windows error exception object (only of value if client is Windows in which case deserialise to a .NET Exception object).
  AxisRate:
    description: Rate object
    type: object
    properties:
      Maximum:
        description: The maximum rate (degrees per second) This must always be a positive number. It indicates the maximum rate in either direction about the axis. 
        type: number
      Minimum:
        description: The minimum rate (degrees per second) This must always be a positive number. It indicates the maximum rate in either direction about the axis. 
        type: number
    required:
        - Maximum
        - Minimum